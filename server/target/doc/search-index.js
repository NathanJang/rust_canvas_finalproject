var searchIndex = {};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bigendian"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"ordering"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",3,{"o":{"n":"bigendian"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"littleendian"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"ordering"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",4,{"o":{"n":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","`ByteOrder` describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",0,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",0,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",0,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",0,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",0,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",0,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",0,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",0,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",0,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",0,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",0,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",0,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",0,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",null,null],[3,"Iter","","Iterator over the bytes contained by the buffer.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner value.",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an underlying buffer.",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the inner value.",null,null],[11,"from_buf","bytes","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from_buf","","",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","bytes::buf","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `Chain` sequencing the provided values.",3,{"i":[{"n":"t"},{"n":"u"}],"o":{"n":"chain"}}],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"u"}}],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",3,{"i":[{"n":"self"}],"o":{"n":"u"}}],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",3,null],[11,"remaining","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bytes","","",3,null],[11,"advance","","",3,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"bytes_vec","","",3,null],[11,"remaining_mut","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bytes_mut","","",3,null],[11,"advance_mut","","",3,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"bytes_vec_mut","","",3,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"size_hint","","",4,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",5,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",5,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",5,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"read","","",5,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_ref","","Gets a reference to the underlying `Buf`.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"limit","","Returns the maximum number of bytes that can be read.",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"set_limit","","Sets the maximum number of bytes that can be read.",6,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"remaining","","",6,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bytes","","",6,null],[11,"advance","","",6,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",7,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",7,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",7,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","","Advance the internal cursor of the Buf",8,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"i8"}}],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"i":[{"n":"self"}],"o":{"n":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[8,"BufMut","","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"i":[{"n":"self"},{"n":"t"}]}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_f32_be","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f64_be","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"i":[{"n":"self"}],"o":{"n":"writer"}}],[8,"FromBuf","","Conversion from a [`Buf`]",null,null],[10,"from_buf","","Creates a value from a buffer.",10,{"i":[{"n":"t"}],"o":{"n":"self"}}],[8,"IntoBuf","","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"with_capacity","bytes","Creates a new `Bytes` with the specified capacity.",1,{"i":[{"n":"usize"}],"o":{"n":"bytes"}}],[11,"new","","Creates a new empty `Bytes`.",1,{"o":{"n":"bytes"}}],[11,"from_static","","Creates a new `Bytes` from a static slice.",1,null],[11,"len","","Returns the number of bytes contained in this `Bytes`.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"slice_from","","Returns a slice of self for the index range `[begin..self.len())`.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"split_to","","Splits the bytes into two at the given index.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytes"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",1,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and keeping the rest.",1,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clear","","Clears the buffer, removing all data.",1,{"i":[{"n":"self"}]}],[11,"try_mut","","Attempts to convert into a `BytesMut` handle.",1,{"i":[{"n":"self"}],"o":{"g":["bytesmut","bytes"],"n":"result"}}],[11,"extend_from_slice","","Appends given bytes to this object.",1,null],[11,"into_buf","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"as_ref","","",1,null],[11,"deref","","",1,null],[11,"from","","",1,{"i":[{"n":"bytesmut"}],"o":{"n":"bytes"}}],[11,"from","","",1,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"bytes"}}],[11,"from","","",1,{"i":[{"n":"string"}],"o":{"n":"bytes"}}],[11,"from","","",1,null],[11,"from","","",1,{"i":[{"n":"str"}],"o":{"n":"bytes"}}],[11,"from_iter","","",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from_iter","","",1,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"ordering"}}],[11,"default","","",1,{"o":{"n":"bytes"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,{"i":[{"n":"self"},{"n":"h"}]}],[11,"borrow","","",1,null],[11,"into_iter","","",1,null],[11,"extend","","",1,{"i":[{"n":"self"},{"n":"t"}]}],[11,"extend","","",1,{"i":[{"n":"self"},{"n":"t"}]}],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",2,{"i":[{"n":"usize"}],"o":{"n":"bytesmut"}}],[11,"new","","Creates a new `BytesMut` with default capacity.",2,{"o":{"n":"bytesmut"}}],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold without reallocating.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"freeze","","Converts `self` into an immutable `Bytes`.",2,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"split_off","","Splits the bytes into two at the given index.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytesmut"}}],[11,"take","","Removes the bytes from the current view, returning them in a new `BytesMut` handle.",2,{"i":[{"n":"self"}],"o":{"n":"bytesmut"}}],[11,"split_to","","Splits the buffer into two at the given index.",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bytesmut"}}],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and dropping the rest.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and keeping the rest.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"clear","","Clears the buffer, removing all data.",2,{"i":[{"n":"self"}]}],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",2,{"i":[{"n":"self"},{"n":"usize"},{"n":"u8"}]}],[11,"set_len","","Sets the length of the buffer.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted into the given `BytesMut`.",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"extend_from_slice","","Appends given bytes to this object.",2,null],[11,"unsplit","","Combine splitted BytesMut objects back as contiguous.",2,{"i":[{"n":"self"},{"n":"bytesmut"}]}],[11,"remaining_mut","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"advance_mut","","",2,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"bytes_mut","","",2,null],[11,"put_slice","","",2,null],[11,"put_u8","","",2,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","",2,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"into_buf","","",2,null],[11,"as_ref","","",2,null],[11,"deref","","",2,null],[11,"as_mut","","",2,null],[11,"deref_mut","","",2,null],[11,"from","","",2,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"bytesmut"}}],[11,"from","","",2,{"i":[{"n":"string"}],"o":{"n":"bytesmut"}}],[11,"from","","",2,null],[11,"from","","",2,{"i":[{"n":"str"}],"o":{"n":"bytesmut"}}],[11,"from","","",2,{"i":[{"n":"bytes"}],"o":{"n":"bytesmut"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"n":"ordering"}}],[11,"default","","",2,{"o":{"n":"bytesmut"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",2,{"i":[{"n":"self"},{"n":"h"}]}],[11,"borrow","","",2,null],[11,"borrow_mut","","",2,null],[11,"write_str","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"write_fmt","","",2,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"bytesmut"}}],[11,"into_iter","","",2,null],[11,"extend","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"extend","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"vec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"vec"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"vec"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"bytesmut"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position and the end of the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"bytes","","Returns a slice starting at the current position and of length between 0 and `Buf::remaining()`.",8,null],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[10,"advance","bytes","Advance the internal cursor of the Buf",8,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"i8"}}],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"i":[{"n":"self"}],"o":{"n":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[8,"BufMut","bytes","A trait for values that provide sequential write access to bytes.",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the current position until the end of the buffer is reached.",9,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut position and of length between 0 and `BufMut::remaining_mut()`.",9,null],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"i":[{"n":"self"},{"n":"t"}]}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_f32_be","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f64_be","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"i":[{"n":"self"}],"o":{"n":"writer"}}],[8,"IntoBuf","bytes","Conversion into a `Buf`",null,null],[16,"Buf","","The `Buf` type that `self` is being converted into",11,null],[10,"into_buf","","Creates a `Buf` from a value.",11,null],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"bigendian"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"littleendian"}}],[11,"partial_cmp","","",13,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",12,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"hash","","",13,null],[11,"hash","","",12,null],[11,"read_u16","","",13,null],[11,"read_u32","","",13,null],[11,"read_u64","","",13,null],[11,"read_uint","","",13,null],[11,"write_u16","","",13,null],[11,"write_u32","","",13,null],[11,"write_u64","","",13,null],[11,"write_uint","","",13,null],[11,"read_u16_into","","",13,null],[11,"read_u32_into","","",13,null],[11,"read_u64_into","","",13,null],[11,"write_u16_into","","",13,null],[11,"write_u32_into","","",13,null],[11,"write_u64_into","","",13,null],[11,"from_slice_u16","","",13,null],[11,"from_slice_u32","","",13,null],[11,"from_slice_u64","","",13,null],[11,"from_slice_f32","","",13,null],[11,"from_slice_f64","","",13,null],[11,"read_u16","","",12,null],[11,"read_u32","","",12,null],[11,"read_u64","","",12,null],[11,"read_uint","","",12,null],[11,"write_u16","","",12,null],[11,"write_u32","","",12,null],[11,"write_u64","","",12,null],[11,"write_uint","","",12,null],[11,"read_u16_into","","",12,null],[11,"read_u32_into","","",12,null],[11,"read_u64_into","","",12,null],[11,"write_u16_into","","",12,null],[11,"write_u32_into","","",12,null],[11,"write_u64_into","","",12,null],[11,"from_slice_u16","","",12,null],[11,"from_slice_u32","","",12,null],[11,"from_slice_u64","","",12,null],[11,"from_slice_f32","","",12,null],[11,"from_slice_f64","","",12,null],[11,"cmp","","",12,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"ordering"}}],[11,"cmp","","",13,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"ordering"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"default","","",12,{"o":{"n":"bigendian"}}],[11,"default","","",13,{"o":{"n":"littleendian"}}],[11,"eq","","",13,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"bool"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"bool"}}],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at `self`'s current position.",8,null],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,null],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,{"i":[{"n":"self"}],"o":{"n":"i8"}}],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i16"}}],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i32"}}],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"i64"}}],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"u64"}}],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian byte order.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"i64"}}],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in big-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point number from `self` in little-endian byte order.",8,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"collect","","Transforms a `Buf` into a concrete buffer.",8,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from `self`.",8,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"take"}}],[11,"chain","","Creates an adaptor which will chain this buffer with another.",8,{"i":[{"n":"self"},{"n":"u"}],"o":{"n":"chain"}}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"reader","","Creates an adaptor which implements the `Read` trait for `self`.",8,{"i":[{"n":"self"}],"o":{"n":"reader"}}],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",8,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices starting at `self`'s current position.",9,null],[11,"put","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,{"i":[{"n":"self"},{"n":"t"}]}],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the cursor by the number of bytes written.",9,null],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"u8"}]}],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,{"i":[{"n":"self"},{"n":"i8"}]}],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i16"}]}],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i32"}]}],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"}]}],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"}]}],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the little-endian byte order.",9,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}]}],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}]}],[11,"put_f32_be","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f32"}]}],[11,"put_f64_be","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in big-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating point number to `self` in little-endian byte order.",9,{"i":[{"n":"self"},{"n":"f64"}]}],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `BufMut`.",9,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"writer","","Creates an adaptor which implements the `Write` trait for `self`.",9,{"i":[{"n":"self"}],"o":{"n":"writer"}}]],"paths":[[8,"ByteOrder"],[3,"Bytes"],[3,"BytesMut"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["canvas_finalproject"] = {"doc":"|_________| is human nature. You, and you alone, are responsible for your own actions. With great power comes great responsibility. You may choose to use your power to work with others and make something beautiful, or you may choose to use your power for selfish purposes. Choose wisely.","items":[[0,"canvas","canvas_finalproject","Contains implementation of the Pixel and Canvas structs.",null,null],[3,"Pixel","canvas_finalproject::canvas","The Pixel struct represents a single pixel (square) on the canvas.",null,null],[12,"id","","The id of the pixel. Useful for updating specific pixels in both the server and client side.",0,null],[12,"color","","A `RGB8` object of a simple RGB container.",0,null],[3,"Canvas","","Canvas struct implements the server side's implementation of the canvas. It keeps track of the width, height, pixels, and the pixel_size to be used to draw the canvas on the client-side.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"pixel"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"pixel"}],"o":{"n":"bool"}}],[11,"new","","Default Constructor",0,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"change_color","","Changes the color of the pixel.",0,{"i":[{"n":"self"},{"n":"rgb8"}]}],[11,"from_json","","Creates a Pixel object from json. The format must look something like: `{ \"id\": _, \"color\": { \"r\": _, \"g\": _, \"b\": _ } }`",0,{"i":[{"n":"jsonvalue"}],"o":{"n":"option"}}],[11,"jsonfy","","Returns a representation of the Pixel object in JSON.",0,{"i":[{"n":"self"}],"o":{"n":"jsonvalue"}}],[11,"stringify","","Returns a representation of the Pixel object as a JSON string.",0,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Default constructor.",1,{"i":[{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"n":"self"}}],[11,"update_pixel","","Updates a pixel on the canvas to the given pixel.",1,{"i":[{"n":"self"},{"n":"pixel"}]}],[11,"stringify","","Returns the representation of the Canvas as a JSON string.",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[0,"server","canvas_finalproject","Contains implementation regarding our websocket server.",null,null],[3,"ClientHandler","canvas_finalproject::server","A struct that contains the implementation for behavior associated with a single client, like when responding to a single client's requests. For now, all client handlers are created equal because we treat all our clients equally, and so the fields in these objects are all the same. However, this struct gives room for expansion.",null,null],[3,"CanvasServer","","A struct that contains implementation for behavior associated with the entire server, like creating `ClientHandler` events when a client tries to establish a connection initially.",null,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new server object, given a single canvas instance. The canvas is moved in since there is a shared canvas cross clients.",2,{"i":[{"n":"canvas"}],"o":{"n":"self"}}],[11,"connection_made","","",2,{"i":[{"n":"self"},{"n":"sender"}],"o":{"n":"clienthandler"}}],[11,"client_connected","","",2,{"i":[{"n":"self"},{"n":"sender"}],"o":{"n":"clienthandler"}}],[11,"on_message","","",3,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"result"}}]],"paths":[[3,"Pixel"],[3,"Canvas"],[3,"CanvasServer"],[3,"ClientHandler"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["httparse"] = {"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for parsing.",null,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"invalidchunksize"}],"o":{"n":"bool"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"status"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"status"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"status"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_complete","","Convenience method to check if status is complete.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_partial","","Convenience method to check if status is partial.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is `Partial`.",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"request"}],"o":{"n":"bool"}}],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"response"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"response"}],"o":{"n":"bool"}}],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"header"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"header"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"header"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",null,{"i":[{"n":"str"}],"o":{"g":["string","errors"],"n":"result"}}],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,null],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"i":[{"n":"str"}],"o":{"g":["string"],"n":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"i":[{"n":"str"}],"o":{"g":["vec"],"n":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"i":[{"n":"str"}],"o":{"g":["string"],"n":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical Standard #46)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"i":[{"n":"str"},{"n":"flags"}],"o":{"g":["string","errors"],"n":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[7,"PUNYCODE_PREFIX","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,null],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",null,null],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"from_bytes","","",0,null],[11,"from_bytes_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"IoVec"]]};
searchIndex["json"] = {"doc":"","items":[[4,"Error","json","Error type of this crate.",null,null],[13,"UnexpectedCharacter","","",0,null],[12,"ch","json::Error","",0,null],[12,"line","","",0,null],[12,"column","","",0,null],[13,"UnexpectedEndOfJson","json","",0,null],[13,"ExceededDepthLimit","","",0,null],[13,"FailedUtf8Parsing","","",0,null],[13,"WrongType","","",0,null],[4,"JsonValue","","",null,null],[13,"Null","","",1,null],[13,"Short","","",1,null],[13,"String","","",1,null],[13,"Number","","",1,null],[13,"Boolean","","",1,null],[13,"Object","","",1,null],[13,"Array","","",1,null],[4,"JsonError","","Error type of this crate.",null,null],[13,"UnexpectedCharacter","","",0,null],[12,"ch","json::JsonError","",0,null],[12,"line","","",0,null],[12,"column","","",0,null],[13,"UnexpectedEndOfJson","json","",0,null],[13,"ExceededDepthLimit","","",0,null],[13,"FailedUtf8Parsing","","",0,null],[13,"WrongType","","",0,null],[5,"parse","","",null,{"i":[{"n":"str"}],"o":{"g":["jsonvalue"],"n":"result"}}],[5,"from","","Convenience for `JsonValue::from(value)`",null,{"i":[{"n":"t"}],"o":{"n":"jsonvalue"}}],[5,"stringify","","Pretty prints out the value as JSON string.",null,{"i":[{"n":"t"}],"o":{"n":"string"}}],[5,"stringify_pretty","","Pretty prints out the value as JSON string. Second argument is a number of spaces to indent new blocks with.",null,{"i":[{"n":"t"},{"n":"u16"}],"o":{"n":"string"}}],[11,"from","","",1,{"i":[{"n":"str"}],"o":{"n":"jsonvalue"}}],[11,"from","","",1,{"i":[{"n":"option"}],"o":{"n":"jsonvalue"}}],[11,"from","","",1,{"i":[{"n":"vec"}],"o":{"n":"jsonvalue"}}],[11,"from","","",1,{"i":[{"g":["string","jsonvalue"],"n":"hashmap"}],"o":{"n":"jsonvalue"}}],[11,"from","","",1,{"i":[{"g":["string","jsonvalue"],"n":"btreemap"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"isize"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"isize"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"usize"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"i8"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"i16"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"i32"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"i64"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"u8"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"u16"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"u32"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"u64"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"f32"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"f64"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"number"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"number"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"object"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"object"}],"o":{"n":"bool"}}],[11,"from","","",1,{"i":[{"n":"bool"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"jsonvalue"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_object","","Create an empty `JsonValue::Object` instance. When creating an object with data, consider using the `object!` macro.",1,{"o":{"n":"jsonvalue"}}],[11,"new_array","","Create an empty `JsonValue::Array` instance. When creating array with data, consider using the `array!` macro.",1,{"o":{"n":"jsonvalue"}}],[11,"dump","","Prints out the value as JSON string.",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"pretty","","Pretty prints out the value as JSON string. Takes an argument that's number of spaces to indent new blocks with.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"string"}}],[11,"to_writer","","Writes the JSON as byte stream into an implementor of `std::io::Write`.",1,{"i":[{"n":"self"},{"n":"w"}]}],[11,"write","","Writes the JSON as byte stream into an implementor of `std::io::Write`.",1,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"write_pretty","","Writes the JSON as byte stream into an implementor of `std::io::Write`.",1,{"i":[{"n":"self"},{"n":"w"},{"n":"u16"}],"o":{"n":"result"}}],[11,"is_string","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_number","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_boolean","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_null","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_object","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_array","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_empty","","Checks whether the value is empty. Returns true for:",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_str","","",1,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"as_number","","",1,{"i":[{"n":"self"}],"o":{"g":["number"],"n":"option"}}],[11,"as_f64","","",1,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[11,"as_f32","","",1,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"option"}}],[11,"as_u64","","",1,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"as_u32","","",1,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"as_u16","","",1,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"as_u8","","",1,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"as_usize","","",1,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"as_i64","","",1,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"as_i32","","",1,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"option"}}],[11,"as_i16","","",1,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"option"}}],[11,"as_i8","","",1,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"option"}}],[11,"as_isize","","",1,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"option"}}],[11,"as_bool","","",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"option"}}],[11,"as_fixed_point_u64","","Obtain an integer at a fixed decimal point. This is useful for converting monetary values and doing arithmetic on them without rounding errors introduced by floating point operations.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"g":["u64"],"n":"option"}}],[11,"as_fixed_point_i64","","Analog to `as_fixed_point_u64`, except returning a signed `i64`, properly handling negative numbers.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"g":["i64"],"n":"option"}}],[11,"take","","Take over the ownership of the value, leaving `Null` in it's place.",1,{"i":[{"n":"self"}],"o":{"n":"jsonvalue"}}],[11,"take_string","","Checks that self is a string, returns an owned Rust `String`, leaving `Null` in it's place.",1,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"option"}}],[11,"push","","Works on `JsonValue::Array` - pushes a new value to the array.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"pop","","Works on `JsonValue::Array` - remove and return last element from an array. On failure returns a null.",1,{"i":[{"n":"self"}],"o":{"n":"jsonvalue"}}],[11,"contains","","Works on `JsonValue::Array` - checks if the array contains a value",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"has_key","","Works on `JsonValue::Object` - checks if the object has a key",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"len","","Returns length of array or object (number of keys), defaults to `0` for other types.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"members","","Works on `JsonValue::Array` - returns an iterator over members. Will return an empty iterator if called on non-array types.",1,{"i":[{"n":"self"}],"o":{"n":"members"}}],[11,"members_mut","","Works on `JsonValue::Array` - returns a mutable iterator over members. Will return an empty iterator if called on non-array types.",1,{"i":[{"n":"self"}],"o":{"n":"membersmut"}}],[11,"entries","","Works on `JsonValue::Object` - returns an iterator over key value pairs. Will return an empty iterator if called on non-object types.",1,{"i":[{"n":"self"}],"o":{"n":"entries"}}],[11,"entries_mut","","Works on `JsonValue::Object` - returns a mutable iterator over key value pairs. Will return an empty iterator if called on non-object types.",1,{"i":[{"n":"self"}],"o":{"n":"entriesmut"}}],[11,"remove","","Works on `JsonValue::Object` - remove a key and return the value it held. If the key was not present, the method is called on anything but an object, it will return a null.",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"jsonvalue"}}],[11,"array_remove","","Works on `JsonValue::Array` - remove an entry and return the value it held. If the method is called on anything but an object or if the index is out of bounds, it will return `JsonValue::Null`.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"jsonvalue"}}],[11,"clear","","When called on an array or an object, will wipe them clean. When called on a string will clear the string. Numbers and booleans become null.",1,{"i":[{"n":"self"}]}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"jsonvalue"}}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"jsonvalue"}}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"index","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"wrong_type","","",0,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[0,"short","","",null,null],[3,"Short","json::short","",null,null],[17,"MAX_LEN","","",null,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"short"}}],[11,"from_slice","","Creates a `Short` from a `&str` slice. This method can cause buffer overflow if the length of the slice is larger than `MAX_LEN`, which is why it is marked as `unsafe`.",2,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"as_str","","Cheaply obtain a `&str` slice out of the `Short`.",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"short"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[0,"object","json","",null,null],[3,"Object","json::object","A binary tree implementation of a string -> `JsonValue` map. You normally don't have to interact with instances of `Object`, much more likely you will be using the `JsonValue::Object` variant, which wraps around this struct.",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new, empty instance of `Object`. Empty `Object` performs no allocation until a value is inserted into it.",3,{"o":{"n":"self"}}],[11,"with_capacity","","Create a new `Object` with memory preallocated for `capacity` number of entries.",3,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"insert","","Insert a new entry, or override an existing one. Note that `key` has to be a `&str` slice and not an owned `String`. The internals of `Object` will handle the heap allocation of the key if needed for better performance.",3,{"i":[{"n":"self"},{"n":"str"},{"n":"jsonvalue"}]}],[11,"override_last","","",3,{"i":[{"n":"self"},{"n":"jsonvalue"}]}],[11,"get","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["jsonvalue"],"n":"option"}}],[11,"get_mut","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["jsonvalue"],"n":"option"}}],[11,"remove","","Attempts to remove the value behind `key`, if successful will return the `JsonValue` stored behind the `key`.",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["jsonvalue"],"n":"option"}}],[11,"len","","",3,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"clear","","Wipe the `Object` clear. The capacity will remain untouched.",3,{"i":[{"n":"self"}]}],[11,"iter","","",3,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","",3,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"dump","","Prints out the value as JSON string.",3,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"pretty","","Pretty prints out the value as JSON string. Takes an argument that's number of spaces to indent new blocks with.",3,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"string"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"object"}],"o":{"n":"bool"}}],[11,"empty","","Create an empty iterator that always returns `None`",4,{"o":{"n":"self"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next_back","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"empty","","Create an empty iterator that always returns `None`",5,{"o":{"n":"self"}}],[11,"next","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next_back","","",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"index","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"jsonvalue"}}],[11,"index","","",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"index","","",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[11,"index_mut","","",3,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"jsonvalue"}}],[0,"number","json","",null,null],[3,"Number","json::number","Number representation used inside `JsonValue`. You can easily convert the `Number` type into native Rust number types and back, or use the equality operator with another number type.",null,null],[17,"NAN","","NaN value represented in `Number` type. NaN is equal to itself.",null,null],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"number"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_parts_unchecked","","Construct a new `Number` from parts. This can't create a NaN value.",6,{"i":[{"n":"bool"},{"n":"u64"},{"n":"i16"}],"o":{"n":"self"}}],[11,"from_parts","","Construct a new `Number` from parts, stripping unnecessary trailing zeroes. This can't create a NaN value.",6,{"i":[{"n":"bool"},{"n":"u64"},{"n":"i16"}],"o":{"n":"self"}}],[11,"as_parts","","Reverse to `from_parts` - obtain parts from an existing `Number`.",6,null],[11,"is_sign_positive","","",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_zero","","",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_nan","","",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_empty","","Test if the number is NaN or has a zero value.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"as_fixed_point_u64","","Obtain an integer at a fixed decimal point. This is useful for converting monetary values and doing arithmetic on them without rounding errors introduced by floating point operations.",6,{"i":[{"n":"self"},{"n":"u16"}],"o":{"g":["u64"],"n":"option"}}],[11,"as_fixed_point_i64","","Analog to `as_fixed_point_u64`, except returning a signed `i64`, properly handling negative numbers.",6,{"i":[{"n":"self"},{"n":"u16"}],"o":{"g":["i64"],"n":"option"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"number"}],"o":{"n":"bool"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",6,{"i":[{"n":"f64"}],"o":{"n":"number"}}],[11,"from","","",6,{"i":[{"n":"f32"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"bool"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"isize"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"isize"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"i8"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"i16"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"i32"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"i64"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"usize"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"u8"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"u16"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"u32"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"from","","",6,{"i":[{"n":"u64"}],"o":{"n":"number"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"bool"}}],[11,"neg","","",6,{"i":[{"n":"self"}],"o":{"n":"number"}}],[0,"iterators","json","",null,null],[6,"Members","json::iterators","Iterator over members of `JsonValue::Array`.",null,null],[6,"MembersMut","","Mutable iterator over members of `JsonValue::Array`.",null,null],[6,"Entries","","Iterator over key value pairs of `JsonValue::Object`.",null,null],[6,"EntriesMut","","Mutable iterator over key value pairs of `JsonValue::Object`.",null,null],[6,"Result","json","Result type used by this crate.",null,null],[6,"Array","","",null,null],[14,"array","","Helper macro for creating instances of `JsonValue::Array`.",null,null],[14,"object","","Helper macro for creating instances of `JsonValue::Object`.",null,null],[11,"eq","json::number","",6,{"i":[{"n":"self"},{"n":"jsonvalue"}],"o":{"n":"bool"}}],[11,"eq","json::object","",3,{"i":[{"n":"self"},{"n":"jsonvalue"}],"o":{"n":"bool"}}]],"paths":[[4,"Error"],[4,"JsonValue"],[3,"Short"],[3,"Object"],[3,"Iter"],[3,"IterMut"],[3,"Number"]]};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled `Cell`, but with frozen contents.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with frozen contents.",null,null],[3,"AtomicLazyCell","","A lazily filled `Cell`, with frozen contents.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",0,{"o":{"n":"lazycell"}}],[11,"new","","Creates a new, empty, `LazyCell`.",0,{"o":{"n":"lazycell"}}],[11,"fill","","Put a value into this cell.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the duration of the cell itself.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of the cell itself.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing function to fail.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"result"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get","","Returns a copy of the contents of the lazy cell.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"atomiclazycell"}}],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,{"o":{"n":"atomiclazycell"}}],[11,"fill","","Put a value into this cell.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"filled","","Test whether this cell has been previously filled.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell itself.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"get","","Returns a copy of the contents of the lazy cell.",1,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",20,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",21,null],[12,"sin6_family","","",21,null],[12,"sin6_port","","",21,null],[12,"sin6_flowinfo","","",21,null],[12,"sin6_addr","","",21,null],[12,"sin6_scope_id","","",21,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",22,null],[12,"sun_family","","",22,null],[12,"sun_path","","",22,null],[3,"passwd","","",null,null],[12,"pw_name","","",23,null],[12,"pw_passwd","","",23,null],[12,"pw_uid","","",23,null],[12,"pw_gid","","",23,null],[12,"pw_change","","",23,null],[12,"pw_class","","",23,null],[12,"pw_gecos","","",23,null],[12,"pw_dir","","",23,null],[12,"pw_shell","","",23,null],[12,"pw_expire","","",23,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",24,null],[12,"ifa_name","","",24,null],[12,"ifa_flags","","",24,null],[12,"ifa_addr","","",24,null],[12,"ifa_netmask","","",24,null],[12,"ifa_dstaddr","","",24,null],[12,"ifa_data","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[3,"msghdr","","",null,null],[12,"msg_name","","",27,null],[12,"msg_namelen","","",27,null],[12,"msg_iov","","",27,null],[12,"msg_iovlen","","",27,null],[12,"msg_control","","",27,null],[12,"msg_controllen","","",27,null],[12,"msg_flags","","",27,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",28,null],[12,"cmsg_level","","",28,null],[12,"cmsg_type","","",28,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",29,null],[12,"if_name","","",29,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",30,null],[12,"aio_offset","","",30,null],[12,"aio_buf","","",30,null],[12,"aio_nbytes","","",30,null],[12,"aio_reqprio","","",30,null],[12,"aio_sigevent","","",30,null],[12,"aio_lio_opcode","","",30,null],[3,"utmpx","","",null,null],[12,"ut_user","","",31,null],[12,"ut_id","","",31,null],[12,"ut_line","","",31,null],[12,"ut_pid","","",31,null],[12,"ut_type","","",31,null],[12,"ut_tv","","",31,null],[12,"ut_host","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_pathv","","",32,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",33,null],[12,"ss_family","","",33,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",34,null],[12,"ai_family","","",34,null],[12,"ai_socktype","","",34,null],[12,"ai_protocol","","",34,null],[12,"ai_addrlen","","",34,null],[12,"ai_canonname","","",34,null],[12,"ai_addr","","",34,null],[12,"ai_next","","",34,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",35,null],[12,"denom","","",35,null],[3,"stat","","",null,null],[12,"st_dev","","",36,null],[12,"st_mode","","",36,null],[12,"st_nlink","","",36,null],[12,"st_ino","","",36,null],[12,"st_uid","","",36,null],[12,"st_gid","","",36,null],[12,"st_rdev","","",36,null],[12,"st_atime","","",36,null],[12,"st_atime_nsec","","",36,null],[12,"st_mtime","","",36,null],[12,"st_mtime_nsec","","",36,null],[12,"st_ctime","","",36,null],[12,"st_ctime_nsec","","",36,null],[12,"st_birthtime","","",36,null],[12,"st_birthtime_nsec","","",36,null],[12,"st_size","","",36,null],[12,"st_blocks","","",36,null],[12,"st_blksize","","",36,null],[12,"st_flags","","",36,null],[12,"st_gen","","",36,null],[12,"st_lspare","","",36,null],[12,"st_qspare","","",36,null],[3,"dirent","","",null,null],[12,"d_ino","","",37,null],[12,"d_seekoff","","",37,null],[12,"d_reclen","","",37,null],[12,"d_namlen","","",37,null],[12,"d_type","","",37,null],[12,"d_name","","",37,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",38,null],[12,"si_errno","","",38,null],[12,"si_code","","",38,null],[12,"si_pid","","",38,null],[12,"si_uid","","",38,null],[12,"si_status","","",38,null],[12,"si_addr","","",38,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",39,null],[12,"sa_mask","","",39,null],[12,"sa_flags","","",39,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",40,null],[12,"ss_size","","",40,null],[12,"ss_flags","","",40,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",41,null],[12,"fst_posmode","","",41,null],[12,"fst_offset","","",41,null],[12,"fst_length","","",41,null],[12,"fst_bytesalloc","","",41,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",42,null],[12,"ra_count","","",42,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",43,null],[12,"f_frsize","","",43,null],[12,"f_blocks","","",43,null],[12,"f_bfree","","",43,null],[12,"f_bavail","","",43,null],[12,"f_files","","",43,null],[12,"f_ffree","","",43,null],[12,"f_favail","","",43,null],[12,"f_fsid","","",43,null],[12,"f_flag","","",43,null],[12,"f_namemax","","",43,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",44,null],[12,"dli_fbase","","",44,null],[12,"dli_sname","","",44,null],[12,"dli_saddr","","",44,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",45,null],[12,"sin_family","","",45,null],[12,"sin_port","","",45,null],[12,"sin_addr","","",45,null],[12,"sin_zero","","",45,null],[3,"statfs","","",null,null],[12,"f_bsize","","",46,null],[12,"f_iosize","","",46,null],[12,"f_blocks","","",46,null],[12,"f_bfree","","",46,null],[12,"f_bavail","","",46,null],[12,"f_files","","",46,null],[12,"f_ffree","","",46,null],[12,"f_fsid","","",46,null],[12,"f_owner","","",46,null],[12,"f_type","","",46,null],[12,"f_flags","","",46,null],[12,"f_fssubtype","","",46,null],[12,"f_fstypename","","",46,null],[12,"f_mntonname","","",46,null],[12,"f_mntfromname","","",46,null],[12,"f_reserved","","",46,null],[3,"kevent","","",null,null],[12,"ident","","",47,null],[12,"filter","","",47,null],[12,"flags","","",47,null],[12,"fflags","","",47,null],[12,"data","","",47,null],[12,"udata","","",47,null],[3,"kevent64_s","","",null,null],[12,"ident","","",48,null],[12,"filter","","",48,null],[12,"flags","","",48,null],[12,"fflags","","",48,null],[12,"data","","",48,null],[12,"udata","","",48,null],[12,"ext","","",48,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",49,null],[12,"dqb_bsoftlimit","","",49,null],[12,"dqb_curbytes","","",49,null],[12,"dqb_ihardlimit","","",49,null],[12,"dqb_isoftlimit","","",49,null],[12,"dqb_curinodes","","",49,null],[12,"dqb_btime","","",49,null],[12,"dqb_itime","","",49,null],[12,"dqb_id","","",49,null],[12,"dqb_spare","","",49,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",50,null],[12,"ifm_version","","",50,null],[12,"ifm_type","","",50,null],[12,"ifm_addrs","","",50,null],[12,"ifm_flags","","",50,null],[12,"ifm_index","","",50,null],[12,"ifm_data","","",50,null],[3,"termios","","",null,null],[12,"c_iflag","","",51,null],[12,"c_oflag","","",51,null],[12,"c_cflag","","",51,null],[12,"c_lflag","","",51,null],[12,"c_cc","","",51,null],[12,"c_ispeed","","",51,null],[12,"c_ospeed","","",51,null],[3,"flock","","",null,null],[12,"l_start","","",52,null],[12,"l_len","","",52,null],[12,"l_pid","","",52,null],[12,"l_type","","",52,null],[12,"l_whence","","",52,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",53,null],[12,"hdr_cnt","","",53,null],[12,"trailers","","",53,null],[12,"trl_cnt","","",53,null],[3,"lconv","","",null,null],[12,"decimal_point","","",54,null],[12,"thousands_sep","","",54,null],[12,"grouping","","",54,null],[12,"int_curr_symbol","","",54,null],[12,"currency_symbol","","",54,null],[12,"mon_decimal_point","","",54,null],[12,"mon_thousands_sep","","",54,null],[12,"mon_grouping","","",54,null],[12,"positive_sign","","",54,null],[12,"negative_sign","","",54,null],[12,"int_frac_digits","","",54,null],[12,"frac_digits","","",54,null],[12,"p_cs_precedes","","",54,null],[12,"p_sep_by_space","","",54,null],[12,"n_cs_precedes","","",54,null],[12,"n_sep_by_space","","",54,null],[12,"p_sign_posn","","",54,null],[12,"n_sign_posn","","",54,null],[12,"int_p_cs_precedes","","",54,null],[12,"int_n_cs_precedes","","",54,null],[12,"int_p_sep_by_space","","",54,null],[12,"int_n_sep_by_space","","",54,null],[12,"int_p_sign_posn","","",54,null],[12,"int_n_sign_posn","","",54,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",55,null],[12,"sigev_signo","","",55,null],[12,"sigev_value","","",55,null],[12,"sigev_notify_attributes","","",55,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",56,null],[12,"pti_resident_size","","",56,null],[12,"pti_total_user","","",56,null],[12,"pti_total_system","","",56,null],[12,"pti_threads_user","","",56,null],[12,"pti_threads_system","","",56,null],[12,"pti_policy","","",56,null],[12,"pti_faults","","",56,null],[12,"pti_pageins","","",56,null],[12,"pti_cow_faults","","",56,null],[12,"pti_messages_sent","","",56,null],[12,"pti_messages_received","","",56,null],[12,"pti_syscalls_mach","","",56,null],[12,"pti_syscalls_unix","","",56,null],[12,"pti_csw","","",56,null],[12,"pti_threadnum","","",56,null],[12,"pti_numrunning","","",56,null],[12,"pti_priority","","",56,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",57,null],[12,"pbi_status","","",57,null],[12,"pbi_xstatus","","",57,null],[12,"pbi_pid","","",57,null],[12,"pbi_ppid","","",57,null],[12,"pbi_uid","","",57,null],[12,"pbi_gid","","",57,null],[12,"pbi_ruid","","",57,null],[12,"pbi_rgid","","",57,null],[12,"pbi_svuid","","",57,null],[12,"pbi_svgid","","",57,null],[12,"rfu_1","","",57,null],[12,"pbi_comm","","",57,null],[12,"pbi_name","","",57,null],[12,"pbi_nfiles","","",57,null],[12,"pbi_pgid","","",57,null],[12,"pbi_pjobc","","",57,null],[12,"e_tdev","","",57,null],[12,"e_tpgid","","",57,null],[12,"pbi_nice","","",57,null],[12,"pbi_start_tvsec","","",57,null],[12,"pbi_start_tvusec","","",57,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",58,null],[12,"ptinfo","","",58,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",59,null],[12,"pth_system_time","","",59,null],[12,"pth_cpu_usage","","",59,null],[12,"pth_policy","","",59,null],[12,"pth_run_state","","",59,null],[12,"pth_flags","","",59,null],[12,"pth_sleep_time","","",59,null],[12,"pth_curpri","","",59,null],[12,"pth_priority","","",59,null],[12,"pth_maxpriority","","",59,null],[12,"pth_name","","",59,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",60,null],[12,"xsu_avail","","",60,null],[12,"xsu_used","","",60,null],[12,"xsu_pagesize","","",60,null],[12,"xsu_encrypted","","",60,null],[3,"xucred","","",null,null],[12,"cr_version","","",61,null],[12,"cr_uid","","",61,null],[12,"cr_ngroups","","",61,null],[12,"cr_groups","","",61,null],[3,"mach_header","","",null,null],[12,"magic","","",62,null],[12,"cputype","","",62,null],[12,"cpusubtype","","",62,null],[12,"filetype","","",62,null],[12,"ncmds","","",62,null],[12,"sizeofcmds","","",62,null],[12,"flags","","",62,null],[3,"mach_header_64","","",null,null],[12,"magic","","",63,null],[12,"cputype","","",63,null],[12,"cpusubtype","","",63,null],[12,"filetype","","",63,null],[12,"ncmds","","",63,null],[12,"sizeofcmds","","",63,null],[12,"flags","","",63,null],[12,"reserved","","",63,null],[3,"segment_command","","",null,null],[12,"cmd","","",64,null],[12,"cmdsize","","",64,null],[12,"segname","","",64,null],[12,"vmaddr","","",64,null],[12,"vmsize","","",64,null],[12,"fileoff","","",64,null],[12,"filesize","","",64,null],[12,"maxprot","","",64,null],[12,"initprot","","",64,null],[12,"nsects","","",64,null],[12,"flags","","",64,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",65,null],[12,"cmdsize","","",65,null],[12,"segname","","",65,null],[12,"vmaddr","","",65,null],[12,"vmsize","","",65,null],[12,"fileoff","","",65,null],[12,"filesize","","",65,null],[12,"maxprot","","",65,null],[12,"initprot","","",65,null],[12,"nsects","","",65,null],[12,"flags","","",65,null],[3,"load_command","","",null,null],[12,"cmd","","",66,null],[12,"cmdsize","","",66,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",67,null],[12,"sdl_family","","",67,null],[12,"sdl_index","","",67,null],[12,"sdl_type","","",67,null],[12,"sdl_nlen","","",67,null],[12,"sdl_alen","","",67,null],[12,"sdl_slen","","",67,null],[12,"sdl_data","","",67,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",68,null],[12,"sin_family","","",68,null],[12,"sin_port","","",68,null],[12,"sin_addr","","",68,null],[12,"sin_srcaddr","","",68,null],[12,"sin_tos","","",68,null],[12,"sin_other","","",68,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",69,null],[12,"sc_family","","",69,null],[12,"ss_sysaddr","","",69,null],[12,"sc_id","","",69,null],[12,"sc_unit","","",69,null],[12,"sc_reserved","","",69,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",70,null],[12,"ipi_spec_dst","","",70,null],[12,"ipi_addr","","",70,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",71,null],[12,"ipi6_ifindex","","",71,null],[3,"ipc_perm","","",null,null],[12,"uid","","",72,null],[12,"gid","","",72,null],[12,"cuid","","",72,null],[12,"cgid","","",72,null],[12,"mode","","",72,null],[12,"_seq","","",72,null],[12,"_key","","",72,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",73,null],[12,"shm_segsz","","",73,null],[12,"shm_lpid","","",73,null],[12,"shm_cpid","","",73,null],[12,"shm_nattch","","",73,null],[12,"shm_atime","","",73,null],[12,"shm_dtime","","",73,null],[12,"shm_ctime","","",73,null],[12,"shm_internal","","",73,null],[3,"pthread_attr_t","","",null,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",74,null],[12,"tv_usec","","",74,null],[3,"if_data","","",null,null],[12,"ifi_type","","",75,null],[12,"ifi_typelen","","",75,null],[12,"ifi_physical","","",75,null],[12,"ifi_addrlen","","",75,null],[12,"ifi_hdrlen","","",75,null],[12,"ifi_recvquota","","",75,null],[12,"ifi_xmitquota","","",75,null],[12,"ifi_unused1","","",75,null],[12,"ifi_mtu","","",75,null],[12,"ifi_metric","","",75,null],[12,"ifi_baudrate","","",75,null],[12,"ifi_ipackets","","",75,null],[12,"ifi_ierrors","","",75,null],[12,"ifi_opackets","","",75,null],[12,"ifi_oerrors","","",75,null],[12,"ifi_collisions","","",75,null],[12,"ifi_ibytes","","",75,null],[12,"ifi_obytes","","",75,null],[12,"ifi_imcasts","","",75,null],[12,"ifi_omcasts","","",75,null],[12,"ifi_iqdrops","","",75,null],[12,"ifi_noproto","","",75,null],[12,"ifi_recvtiming","","",75,null],[12,"ifi_xmittiming","","",75,null],[12,"ifi_lastchange","","",75,null],[12,"ifi_unused2","","",75,null],[12,"ifi_hwassist","","",75,null],[12,"ifi_reserved1","","",75,null],[12,"ifi_reserved2","","",75,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",76,null],[12,"bh_caplen","","",76,null],[12,"bh_datalen","","",76,null],[12,"bh_hdrlen","","",76,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WTERMSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFEXITED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WEXITSTATUS","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WCOREDUMP","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"QCMD","","",null,{"i":[{"n":"c_int"},{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WSTOPSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"_WSTATUS","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFCONTINUED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WIFSIGNALED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WIFSTOPPED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"pthread_attr_t"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"timeval32"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"if_data"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"bpf_hdr"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"aiocb"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"utmpx"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"glob_t"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"sockaddr_storage"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"addrinfo"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"mach_timebase_info"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"stat"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"dirent"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"pthread_mutex_t"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"pthread_mutexattr_t"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"pthread_cond_t"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"pthread_condattr_t"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlock_t"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlockattr_t"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"siginfo_t"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"sigaction"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"stack_t"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"fstore_t"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"radvisory"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"statvfs"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"dl_info"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"statfs"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"kevent"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"kevent64_s"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"dqblk"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"if_msghdr"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"termios"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"flock"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"sf_hdtr"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"lconv"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"sigevent"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"proc_taskinfo"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"proc_bsdinfo"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"proc_taskallinfo"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"proc_threadinfo"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"xsw_usage"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"xucred"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"mach_header"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"mach_header_64"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"segment_command"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"segment_command_64"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"load_command"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"sockaddr_dl"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"sockaddr_inarp"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"sockaddr_ctl"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"in_pktinfo"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"in6_pktinfo"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"ipc_perm"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"shmid_ds"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"sockaddr"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in6"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"sockaddr_un"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"passwd"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"ifaddrs"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"fd_set"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"utsname"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"msghdr"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"cmsghdr"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"fsid_t"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"if_nameindex"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"utimbuf"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"timeval"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"rlimit"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"rusage"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"in_addr"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"in6_addr"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"ip_mreq"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"ipv6_mreq"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"hostent"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"iovec"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"pollfd"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"winsize"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"linger"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"sigval"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"itimerval"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"tms"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"servent"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"c_char","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"boolean_t","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this pkt is done\".",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDENABLE_BG_TRACE","","",null,null],[17,"KERN_KDDISABLE_BG_TRACE","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"aiocb"],[3,"utmpx"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"proc_threadinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_rwlockattr_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has already been called.",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't match any of the log levels.",null,null],[4,"Level","","An enum representing the available verbosity levels of the logger.",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters of the logger.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,{"i":[{"n":"levelfilter"}]}],[5,"max_level","","Returns the current maximum log level.",null,{"o":{"n":"levelfilter"}}],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,{"i":[{"n":"log"}],"o":{"g":["setloggererror"],"n":"result"}}],[5,"logger","","Returns a reference to the logger.",null,{"o":{"n":"log"}}],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[10,"log","","Logs the `Record`.",2,{"i":[{"n":"self"},{"n":"record"}]}],[10,"flush","","Flushes any buffered records.",2,{"i":[{"n":"self"}]}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"ordering"}}],[11,"from_str","","",0,{"i":[{"n":"str"}],"o":{"g":["level"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"o":{"n":"level"}}],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"levelfilter"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"g":["ordering"],"n":"option"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"levelfilter"}],"o":{"n":"ordering"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["levelfilter"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"o":{"n":"levelfilter"}}],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,{"i":[{"n":"self"}],"o":{"g":["level"],"n":"option"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"record"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"builder","","Returns a new builder.",3,{"o":{"n":"recordbuilder"}}],[11,"args","","The message body.",3,{"i":[{"n":"self"}],"o":{"n":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"i":[{"n":"self"}],"o":{"n":"metadata"}}],[11,"level","","The verbosity level of the message.",3,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"target","","The name of the target of the directive.",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"module_path","","The module path of the message.",3,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"file","","The source file containing the message.",3,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"line","","The line containing the message.",3,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct new `RecordBuilder`.",4,{"o":{"n":"recordbuilder"}}],[11,"args","","Set `args`.",4,{"i":[{"n":"self"},{"n":"arguments"}],"o":{"n":"recordbuilder"}}],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with `MetadataBuilder`.",4,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"recordbuilder"}}],[11,"level","","Set `Metadata::level`.",4,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"recordbuilder"}}],[11,"target","","Set `Metadata::target`",4,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"recordbuilder"}}],[11,"module_path","","Set `module_path`",4,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"recordbuilder"}}],[11,"file","","Set `file`",4,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"recordbuilder"}}],[11,"line","","Set `line`",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"recordbuilder"}}],[11,"build","","Invoke the builder and return a `Record`",4,{"i":[{"n":"self"}],"o":{"n":"record"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"metadata"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"le","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"gt","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"ge","","",5,{"i":[{"n":"self"},{"n":"metadata"}],"o":{"n":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"builder","","Returns a new builder.",5,{"o":{"n":"metadatabuilder"}}],[11,"level","","The verbosity level of the message.",5,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"target","","The name of the target of the directive.",5,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"cmp","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"le","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"gt","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"ge","","",6,{"i":[{"n":"self"},{"n":"metadatabuilder"}],"o":{"n":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `MetadataBuilder`.",6,{"o":{"n":"metadatabuilder"}}],[11,"level","","Setter for `level`.",6,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"metadatabuilder"}}],[11,"target","","Setter for `target`.",6,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"metadatabuilder"}}],[11,"build","","Returns a `Metadata` object.",6,{"i":[{"n":"self"}],"o":{"n":"metadata"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"parselevelerror"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"parselevelerror"}],"o":{"n":"bool"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern using debug assertions.",null,null]],"paths":[]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on non-blocking APIs, event notification, and other useful utilities for building high performance IO apps.","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space `Poll` registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated `Registration`.",null,null],[3,"PollOpt","","Options supplied when registering an `Evented` handle with `Poll`",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",0,null],[3,"Events","","A collection of readiness events.",null,null],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"ordering"}}],[11,"empty","","Return a `PollOpt` representing no set options.",1,{"o":{"n":"pollopt"}}],[11,"edge","","Return a `PollOpt` representing edge-triggered notifications.",1,{"o":{"n":"pollopt"}}],[11,"level","","Return a `PollOpt` representing level-triggered notifications.",1,{"o":{"n":"pollopt"}}],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,{"o":{"n":"pollopt"}}],[11,"is_edge","","Returns true if the options include edge-triggered notifications.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_level","","Returns true if the options include level-triggered notifications.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"contains","","Returns true if `self` is a superset of `other`.",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"bool"}}],[11,"insert","","Adds all options represented by `other` into `self`.",1,{"i":[{"n":"self"},{"n":"pollopt"}]}],[11,"remove","","Removes all options represented by `other` from `self`.",1,{"i":[{"n":"self"},{"n":"pollopt"}]}],[11,"bitor","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"bitxor","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"bitand","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"sub","","",1,{"i":[{"n":"self"},{"n":"pollopt"}],"o":{"n":"pollopt"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"ordering"}}],[11,"empty","","Returns the empty `Ready` set.",2,{"o":{"n":"ready"}}],[11,"readable","","Returns a `Ready` representing readable readiness.",2,{"o":{"n":"ready"}}],[11,"writable","","Returns a `Ready` representing writable readiness.",2,{"o":{"n":"ready"}}],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,{"o":{"n":"ready"}}],[11,"is_empty","","Returns true if `Ready` is the empty set",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_readable","","Returns true if the value includes readable readiness",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_writable","","Returns true if the value includes writable readiness",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"remove","","Removes all options represented by `other` from `self`.",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"contains","","Returns true if `self` is a superset of `other`.",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"from_usize","","Create a `Ready` instance using the given `usize` representation.",2,{"i":[{"n":"usize"}],"o":{"n":"ready"}}],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"bitor","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"bitor_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"bitxor","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"bitxor_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"bitand","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"bitand_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"sub","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ready"}}],[11,"sub_assign","","",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"setreadiness"}}],[11,"new","","Return a new `Poll` handle.",4,{"o":{"g":["poll"],"n":"result"}}],[11,"register","","Register an `Evented` handle with the `Poll` instance.",4,{"i":[{"n":"self"},{"n":"e"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",4,{"i":[{"n":"self"},{"n":"e"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",4,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"result"}}],[11,"poll","","Wait for readiness events",4,{"i":[{"n":"self"},{"n":"events"},{"g":["duration"],"n":"option"}],"o":{"g":["usize"],"n":"result"}}],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",4,{"i":[{"n":"self"},{"n":"events"},{"g":["duration"],"n":"option"}],"o":{"g":["usize"],"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_raw_fd","","",4,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity` events.",5,{"i":[{"n":"usize"}],"o":{"n":"events"}}],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",5,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Returns an iterator over the `Event` values.",5,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"clear","","Clearing all `Event` values from container explicitly.",5,{"i":[{"n":"self"}]}],[11,"into_iter","","",5,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new2","","Create and return a new `Registration` and the associated `SetReadiness`.",6,null],[11,"register","","",6,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",6,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",6,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"drop","","",6,{"i":[{"n":"self"}]}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"readiness","","Returns the registration's current readiness.",3,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"set_readiness","","Set the registration's readiness",3,{"i":[{"n":"self"},{"n":"ready"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",2,{"i":[{"n":"unixready"}],"o":{"n":"ready"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"ordering"}}],[11,"hash","","",0,null],[11,"from","","",0,{"i":[{"n":"usize"}],"o":{"n":"token"}}],[0,"net","","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a remote socket.",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the specified address.",7,{"i":[{"n":"socketaddr"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given `std::net::TcpBuilder`, connecting it to the address specified.",7,{"i":[{"n":"tcpstream"},{"n":"socketaddr"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,{"i":[{"n":"tcpstream"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",7,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",7,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",7,{"i":[{"n":"self"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",7,{"i":[{"n":"self"},{"n":"shutdown"}],"o":{"n":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",7,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",7,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"peek","","Receives data on the socket from the remote address to which it is connected, without removing that data from the queue. On success, returns the number of bytes peeked.",7,null],[11,"read_bufs","","Read in a list of buffers all at once.",7,null],[11,"write_bufs","","Write a list of buffers all at once.",7,null],[11,"read","","",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"register","","",7,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",7,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",7,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"bind","","Convenience method to bind a new TCP listener to the specified address to receive new connections.",8,{"i":[{"n":"socketaddr"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"from_std","","Creates a new `TcpListener` from an instance of a `std::net::TcpListener` type.",8,{"i":[{"n":"tcplistener"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"accept","","Accepts a new `TcpStream`.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",8,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",8,{"i":[{"n":"self"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"register","","",8,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",8,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",8,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_raw_fd","","",7,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"as_raw_fd","","",7,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",7,{"i":[{"n":"rawfd"}],"o":{"n":"tcpstream"}}],[11,"into_raw_fd","","",8,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"as_raw_fd","","",8,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",8,{"i":[{"n":"rawfd"}],"o":{"n":"tcplistener"}}],[11,"bind","","Creates a UDP socket from the given address.",9,{"i":[{"n":"socketaddr"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std socket.",9,{"i":[{"n":"udpsocket"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"local_addr","","Returns the socket address that this socket was created from.",9,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",9,{"i":[{"n":"self"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"send_to","","Sends data on the socket to the given address. On success, returns the number of bytes written.",9,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"send","","Sends data on the socket to the address previously bound via connect(). On success, returns the number of bytes written.",9,null],[11,"recv","","Receives data from the socket previously bound with connect(). On success, returns the number of bytes read and the address from whence the data came.",9,null],[11,"connect","","Connects the UDP socket setting the default destination for `send()` and limiting packets that are read via `recv` from the address specified in `addr`.",9,{"i":[{"n":"self"},{"n":"socketaddr"}],"o":{"n":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"register","","",9,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",9,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",9,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_raw_fd","","",9,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"as_raw_fd","","",9,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"from_raw_fd","","",9,{"i":[{"n":"rawfd"}],"o":{"n":"udpsocket"}}],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","[`Events`] iterator.",null,null],[3,"Event","","An readiness event returned by [`Poll::poll`].",null,null],[8,"Evented","","A value that may be registered with `Poll`",null,null],[10,"register","","Register `self` with the given `Poll` instance.",10,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",null,null],[12,"0","","",11,null],[3,"UnixReady","","Unix specific extensions to `Ready`",null,null],[11,"clone","mio::event","",12,{"i":[{"n":"self"}],"o":{"n":"event"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"event"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"event"}],"o":{"n":"bool"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new `Event` containing `readiness` and `token`",12,{"i":[{"n":"ready"},{"n":"token"}],"o":{"n":"event"}}],[11,"readiness","","Returns the event's readiness.",12,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"token","","Returns the event's token.",12,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"g":["event"],"n":"option"}}],[11,"fmt","mio::unix","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"register","","",11,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",11,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",11,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"unixready"}}],[11,"partial_cmp","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"le","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"gt","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"ge","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"bool"}}],[11,"cmp","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"ordering"}}],[11,"aio","","Returns a `Ready` representing AIO completion readiness",14,{"o":{"n":"unixready"}}],[11,"error","","Returns a `Ready` representing error readiness.",14,{"o":{"n":"unixready"}}],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,{"o":{"n":"unixready"}}],[11,"is_aio","","Returns true if `Ready` contains AIO readiness",14,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_error","","Returns true if the value includes error readiness",14,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_hup","","Returns true if the value includes HUP readiness",14,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",14,{"i":[{"n":"ready"}],"o":{"n":"unixready"}}],[11,"deref","","",14,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"deref_mut","","",14,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"bitor","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"bitxor","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"bitand","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"sub","","",14,{"i":[{"n":"self"},{"n":"unixready"}],"o":{"n":"unixready"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"SetReadiness"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"o":{"g":["tcpbuilder"],"n":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM` type, and with a protocol argument of 0.",0,{"o":{"g":["tcpbuilder"],"n":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["tcpbuilder"],"n":"result"}}],[11,"listen","","Mark a socket as ready to accept incoming connection requests using accept()",0,{"i":[{"n":"self"},{"n":"i32"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"connect","","Initiate a connection on this socket to the specified address.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,{"i":[{"n":"self"}],"o":{"g":["tcpstream"],"n":"result"}}],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,{"i":[{"n":"self"}],"o":{"g":["tcplistener"],"n":"result"}}],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"o":{"g":["udpbuilder"],"n":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM` type, and with a protocol argument of 0.",1,{"o":{"g":["udpbuilder"],"n":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["udpsocket"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"from_raw_fd","","",0,{"i":[{"n":"c_int"}],"o":{"n":"tcpbuilder"}}],[11,"as_raw_fd","","",0,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[11,"from_raw_fd","","",1,{"i":[{"n":"c_int"}],"o":{"n":"udpbuilder"}}],[11,"as_raw_fd","","",1,{"i":[{"n":"self"}],"o":{"n":"c_int"}}],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"reuse_port","net2","",0,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_port","","",0,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[11,"reuse_port","","",1,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[11,"get_reuse_port","","",1,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so the amount of milliseconds between them.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so the duration of time between them.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection to the host specified by `addr`.",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"result"}}],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"result"}}],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for this socket",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for this socket",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["ipv4addr"],"n":"result"}}],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this socket.",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["bool"],"n":"result"}}],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv4addr"},{"n":"ipv4addr"}],"o":{"n":"result"}}],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,{"i":[{"n":"self"},{"n":"ipv6addr"},{"n":"u32"}],"o":{"n":"result"}}],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"result"}}],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"},{"g":["duration"],"n":"option"}],"o":{"n":"result"}}],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and `recv` syscalls to be used to send data and also applies filters to only receive data from the specified address.",6,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"result"}}],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,null],[10,"recv","","Receives data on the socket from the remote address to which it is connected.",6,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"result"}}]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the request.  For example, a forward slash indicates a path.  In order for that charcter to exist outside of a path separator, that charcter would need to be encoded.","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"i":[{"n":"u8"}],"o":{"n":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"i":[{"n":"str"},{"n":"e"}],"o":{"n":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",0,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"simple_encode_set"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"query_encode_set"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",2,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"default_encode_set"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",3,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"path_segment_encode_set"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",4,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"userinfo_encode_set"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"contains","","",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"percentencode"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",6,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"percentdecode"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",7,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"size_hint","","",7,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",7,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"option"}}],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",7,{"i":[{"n":"self"}],"o":{"g":["cow","utf8error"],"n":"result"}}],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",7,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"cow"}}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"IsaacRng","rand","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[3,"ChaChaRng","","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"o":{"n":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"o":{"n":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"o":{"n":"t"}}],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"n":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"i":[{"n":"range"},{"n":"r"}],"o":{"n":"self"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"i":[{"n":"x"},{"n":"x"}],"o":{"n":"range"}}],[11,"sample","","",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","","",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"gamma"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"gamma"}}],[11,"sample","","",5,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",5,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"chisquared"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"i":[{"n":"f64"}],"o":{"n":"chisquared"}}],[11,"sample","","",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"fisherf"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"fisherf"}}],[11,"sample","","",7,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",7,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"studentt"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"i":[{"n":"f64"}],"o":{"n":"studentt"}}],[11,"sample","","",8,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",8,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"standardnormal"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",9,{"i":[{"n":"r"}],"o":{"n":"standardnormal"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"normal"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"normal"}}],[11,"sample","","",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"lognormal"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"lognormal"}}],[11,"sample","","",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"exp1"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",12,{"i":[{"n":"r"}],"o":{"n":"exp1"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"exp"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"i":[{"n":"f64"}],"o":{"n":"exp"}}],[11,"sample","","",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"sample","","",16,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","","",16,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"new","","",16,{"o":{"n":"randsample"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"weighted"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[11,"ind_sample","","",17,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[0,"jitter","rand","Non-physical true random number generator based on timing jitter.",null,null],[3,"JitterRng","rand::jitter","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",null,null],[4,"TimerError","","An error that can occur when `test_timer` fails.",null,null],[13,"NoTimer","","No timer available.",18,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",18,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",18,null],[13,"TinyVariantions","","Variations of deltas of time too small.",18,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",18,null],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"timererror"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"timererror"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",18,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a timer.",19,{"o":{"g":["jitterrng","timererror"],"n":"result"}}],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",19,null],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",19,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",19,{"i":[{"n":"self"}],"o":{"g":["u32","timererror"],"n":"result"}}],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterEntropy` entropy collector.",19,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"i64"}}],[11,"next_u32","","",19,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",19,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",19,null],[0,"os","rand","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",20,{"o":{"g":["osrng"],"n":"result"}}],[11,"next_u32","","",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",20,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",20,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ReadRng` from a `Read`.",21,{"i":[{"n":"r"}],"o":{"n":"readrng"}}],[11,"next_u32","","",21,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",21,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",21,null],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",22,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",23,{"i":[{"n":"self"},{"n":"r"}]}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",22,{"i":[{"n":"r"},{"n":"u64"},{"n":"rsdr"}],"o":{"n":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",22,{"i":[{"n":"self"}]}],[11,"next_u32","","",22,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",22,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",22,null],[11,"reseed","","",22,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",22,null],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"reseedwithdefault"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reseed","","",24,{"i":[{"n":"self"},{"n":"r"}]}],[11,"default","","",24,{"o":{"n":"reseedwithdefault"}}],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",null,null],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"g":["vec","vec"],"n":"result"}}],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",null,null],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",null,null],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",null,{"i":[{"n":"r"},{"n":"usize"},{"n":"usize"}],"o":{"g":["usize"],"n":"vec"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"rand","rand","",0,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"open01"}}],[11,"rand","","",1,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"closed01"}}],[11,"rand","","",0,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"open01"}}],[11,"rand","","",1,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"closed01"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"chacharng"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",25,{"o":{"n":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",25,{"i":[{"n":"self"},{"n":"u64"},{"n":"u64"}]}],[11,"next_u32","","",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","",25,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",25,null],[11,"rand","","",25,{"i":[{"n":"r"}],"o":{"n":"chacharng"}}],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",26,{"o":{"n":"isaacrng"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"isaacrng"}}],[11,"next_u32","","",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","",26,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",26,null],[11,"rand","","",26,{"i":[{"n":"r"}],"o":{"n":"isaacrng"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",27,{"o":{"n":"isaac64rng"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"isaac64rng"}}],[11,"next_u32","","",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",27,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"reseed","","",27,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",27,null],[11,"rand","","",27,{"i":[{"n":"r"}],"o":{"n":"isaac64rng"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"xorshiftrng"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",28,{"o":{"n":"xorshiftrng"}}],[11,"next_u32","","",28,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",28,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",28,null],[11,"rand","","",28,{"i":[{"n":"r"}],"o":{"n":"xorshiftrng"}}],[8,"Rand","","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",29,{"i":[{"n":"r"}],"o":{"n":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",30,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","Return the next random u64.",30,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",30,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",30,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",30,null],[11,"gen","","Return a random value of a `Rand` type.",30,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",30,{"i":[{"n":"self"}],"o":{"n":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",30,{"i":[{"n":"self"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",30,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",30,{"i":[{"n":"self"}],"o":{"n":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",30,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",30,null],[11,"shuffle","","Shuffle a mutable slice in place.",30,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",31,{"i":[{"n":"self"},{"n":"seed"}]}],[10,"from_seed","","Create a new RNG with the given seed.",31,{"i":[{"n":"seed"}],"o":{"n":"self"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",32,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",33,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"stdrng"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"o":{"g":["stdrng"],"n":"result"}}],[11,"next_u32","","",34,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",34,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"threadrng"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next_u32","","",35,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",35,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[4,"TimerError"],[3,"JitterRng"],[3,"OsRng"],[3,"ReadRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"XorShiftRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rgb"] = {"doc":"Basic struct for `RGB` and `RGBA` pixels. Packed, with red first, alpha last.","items":[[3,"RGB","rgb","The RGB pixel",null,null],[12,"r","","Red",0,null],[12,"g","","Green",0,null],[12,"b","","Blue",0,null],[3,"RGBA","","The RGBA pixel",null,null],[12,"r","","Red",1,null],[12,"g","","Green",1,null],[12,"b","","Blue",1,null],[12,"a","","Alpha",1,null],[11,"from_iter","","Takes exactly 3 elements from the iterator and creates a new instance. Panics if there are fewer elements in the iterator.",0,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"new","","Convenience function for creating a new pixel",0,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"self"}}],[11,"iter","","Iterate over color components (R, G, and B)",0,{"i":[{"n":"self"}],"o":{"g":["iter"],"n":"cloned"}}],[11,"alpha","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"rgba"}}],[11,"new_alpha","","",0,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"rgba"}}],[11,"map","","",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"rgb"}}],[11,"as_slice","","",0,null],[11,"as_mut_slice","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",1,{"i":[{"n":"t"},{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"self"}}],[11,"new_alpha","","",1,{"i":[{"n":"t"},{"n":"t"},{"n":"t"},{"n":"a"}],"o":{"n":"self"}}],[11,"from_iter","","Takes exactly 4 elements from the iterator and creates a new instance. Panics if there are fewer elements in the iterator.",1,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"iter","","Iterate over all components (length=4)",1,{"i":[{"n":"self"}],"o":{"g":["iter"],"n":"cloned"}}],[11,"rgb","","Copy RGB components out of the RGBA struct",1,{"i":[{"n":"self"}],"o":{"n":"rgb"}}],[11,"rgb_mut","","Provide a mutable view of only RGB components (leaving out alpha). Useful to change color without changing opacity.",1,{"i":[{"n":"self"}],"o":{"n":"rgb"}}],[11,"map_rgb","","Create new RGBA with the same alpha value, but different RGB values",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"rgba"}}],[11,"map","","",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"rgba"}}],[11,"as_slice","","",1,null],[11,"as_mut_slice","","",1,null],[11,"from","","",1,{"i":[{"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"bgr"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"bgr"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"add","","",0,null],[11,"add","","",1,null],[11,"sub","","",0,null],[11,"sub","","",1,null],[11,"add","","",0,null],[11,"add","","",1,null],[11,"mul","","",0,null],[11,"mul","","",1,null],[11,"from","","",0,null],[11,"into","","",0,null],[11,"from","","",1,null],[11,"into","","",1,null],[11,"from","","",0,{"i":[{"g":["u8"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["u16"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["u8"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["u8"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["u16"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["u16"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["i16"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["i16"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["i32"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"g":["f32"],"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["u16"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["u8"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["u8"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["u16"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["u16"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["i16"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["i16"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["i32"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"g":["f32"],"n":"rgba"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"gray"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"grayalpha"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"bgr"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"bgra"}],"o":{"n":"self"}}],[11,"as_ref","","",0,null],[11,"as_ref","","",1,null],[11,"as_mut","","",0,null],[11,"as_mut","","",1,null],[0,"alt","","BGR/BGRA alernative layouts & grayscale",null,null],[3,"BGR","rgb::alt","RGB in reverse byte order",null,null],[12,"b","","Blue first",2,null],[12,"g","","Green",2,null],[12,"r","","Red last",2,null],[3,"BGRA","","BGR+A",null,null],[12,"b","","Blue first",3,null],[12,"g","","Green",3,null],[12,"r","","Red",3,null],[12,"a","","Alpha last",3,null],[3,"Gray","","Grayscale. Use `.0` or `*` (deref) to access the value.",null,null],[12,"0","","brightness level",4,null],[3,"GrayAlpha","","Grayscale with alpha. Use `.0`/`.1` to access.",null,null],[12,"0","","brightness level",5,null],[12,"1","","alpha",5,null],[6,"BGR8","","",null,null],[6,"BGR16","","16-bit BGR in machine's native endian",null,null],[6,"BGRA8","","",null,null],[6,"BGRA16","","16-bit BGR in machine's native endian",null,null],[6,"GRAY8","","",null,null],[6,"GRAY16","","16-bit gray in machine's native endian",null,null],[6,"GRAYA8","","",null,null],[6,"GRAYA16","","16-bit gray in machine's native endian",null,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"bgr"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",2,{"o":{"n":"bgr"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"bgr"}],"o":{"n":"bool"}}],[11,"hash","","",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bgra"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",3,{"o":{"n":"bgra"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"bool"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"bool"}}],[11,"le","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"bool"}}],[11,"gt","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"bool"}}],[11,"ge","","",3,{"i":[{"n":"self"},{"n":"bgra"}],"o":{"n":"bool"}}],[11,"hash","","",3,null],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"gray"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",4,{"o":{"n":"gray"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"gray"}],"o":{"n":"bool"}}],[11,"hash","","",4,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"grayalpha"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",5,{"o":{"n":"grayalpha"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"bool"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"bool"}}],[11,"le","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"bool"}}],[11,"gt","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"bool"}}],[11,"ge","","",5,{"i":[{"n":"self"},{"n":"grayalpha"}],"o":{"n":"bool"}}],[11,"hash","","",5,null],[11,"deref","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[6,"RGB8","rgb","8-bit RGB",null,null],[6,"RGB16","","16-bit RGB in machine's native endian",null,null],[6,"RGBA8","","8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.",null,null],[6,"RGBA16","","16-bit RGB in machine's native endian. 0 = transparent, 65535 = opaque.",null,null],[8,"ComponentSlice","","Casting the struct to slices of its components",null,null],[10,"as_slice","","The components interpreted as an array, e.g. one `RGB` expands to 3 elements.",6,null],[10,"as_mut_slice","","",6,null],[8,"ComponentBytes","","Casting a slice of `RGB/A` values to a slice of `u8`",null,null],[11,"as_bytes","","The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.",7,null],[11,"as_bytes_mut","","The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.",7,null],[8,"ComponentMap","","Applying operation to every component",null,null],[10,"map","","Convenience function (equivalent of `self.iter().map().collect()`) for applying the same formula to every component.",8,{"i":[{"n":"self"},{"n":"callback"}],"o":{"n":"destpixel"}}],[8,"FromSlice","","Cast a slice of component values (bytes) as a slice of RGB/RGBA pixels",null,null],[10,"as_rgb","","Reinterpert slice as RGB pixels",9,null],[10,"as_rgba","","Reinterpert slice as RGBA pixels",9,null],[10,"as_rgb_mut","","Reinterpert mutable slice as RGB pixels",9,null],[10,"as_rgba_mut","","Reinterpert mutable slice as RGBA pixels",9,null],[10,"as_bgr","","Reinterpert slice as reverse-order BGR pixels",9,null],[10,"as_bgra","","Reinterpert slice as reverse-order BGRA pixels",9,null],[10,"as_bgr_mut","","Reinterpert ntable slice as reverse-order BGR pixels",9,null],[10,"as_bgra_mut","","Reinterpert mutable slice as reverse-order BGRA pixels",9,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"rgb"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",0,{"o":{"n":"rgb"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"rgb"}],"o":{"n":"bool"}}],[11,"hash","","",0,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"rgba"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"rgba"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"rgba"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"new","rgb::alt","Convenience function for creating a new pixel",2,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"self"}}],[11,"iter","","Iterate over color components (R, G, and B)",2,{"i":[{"n":"self"}],"o":{"g":["iter"],"n":"cloned"}}],[11,"alpha","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bgra"}}],[11,"new_alpha","","",2,{"i":[{"n":"self"},{"n":"a"}],"o":{"n":"bgra"}}],[11,"map","","",2,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bgr"}}],[11,"as_slice","","",2,null],[11,"as_mut_slice","","",2,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",3,{"i":[{"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"rgb"}],"o":{"n":"self"}}],[11,"iter","","Iterate over all components (length=4)",3,{"i":[{"n":"self"}],"o":{"g":["iter"],"n":"cloned"}}],[11,"rgb","","Copy RGB components out of the RGBA struct",3,{"i":[{"n":"self"}],"o":{"n":"bgr"}}],[11,"rgb_mut","","Provide a mutable view of only RGB components (leaving out alpha). Useful to change color without changing opacity.",3,{"i":[{"n":"self"}],"o":{"n":"bgr"}}],[11,"map_rgb","","Create new RGBA with the same alpha value, but different RGB values",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bgra"}}],[11,"map","","",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bgra"}}],[11,"as_slice","","",3,null],[11,"as_mut_slice","","",3,null],[11,"from","","",3,{"i":[{"n":"bgr"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"bgr"}],"o":{"n":"self"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_bytes","rgb","The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.",7,null],[11,"as_bytes_mut","","The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.",7,null],[11,"from","rgb::alt","",2,null],[11,"into","","",2,null],[11,"from","","",3,null],[11,"into","","",3,null],[11,"from","","",2,{"i":[{"n":"rgb"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"rgba"}],"o":{"n":"self"}}],[11,"as_ref","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut","","",4,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut","","",5,{"i":[{"n":"self"}],"o":{"n":"t"}}]],"paths":[[3,"RGB"],[3,"RGBA"],[3,"BGR"],[3,"BGRA"],[3,"Gray"],[3,"GrayAlpha"],[8,"ComponentSlice"],[8,"ComponentBytes"],[8,"ComponentMap"],[8,"FromSlice"]]};
searchIndex["sha1"] = {"doc":"A minimal implementation of SHA1 for rust.","items":[[3,"Sha1","sha1","Represents a Sha1 hash object in memory.",null,null],[3,"Digest","","Digest generated from a `Sha1` instance.",null,null],[3,"DigestParseError","","Indicates that a digest couldn't be parsed.",null,null],[17,"DIGEST_LENGTH","","The length of a SHA1 digest in bytes",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"sha1"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"ordering"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"sha1"}],"o":{"n":"bool"}}],[11,"hash","","",0,null],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"ordering"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"digest"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"digest"}}],[11,"default","","",1,{"o":{"n":"digest"}}],[11,"default","","",0,{"o":{"n":"sha1"}}],[11,"new","","Creates an fresh sha1 hash object.",0,{"o":{"n":"sha1"}}],[11,"from","","Shortcut to create a sha1 from some bytes.",0,{"i":[{"n":"d"}],"o":{"n":"sha1"}}],[11,"reset","","Resets the hash object to it's initial state.",0,{"i":[{"n":"self"}]}],[11,"update","","Update hash with input data.",0,null],[11,"digest","","Retrieve digest result.",0,{"i":[{"n":"self"}],"o":{"n":"digest"}}],[11,"bytes","","Returns the 160 bit (20 byte) digest as a byte array.",1,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"digestparseerror"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"digestparseerror"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","",1,{"i":[{"n":"str"}],"o":{"g":["digest","digestparseerror"],"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Sha1"],[3,"Digest"],[3,"DigestParseError"]]};
searchIndex["slab"] = {"doc":"","items":[[3,"Slab","slab","A preallocated chunk of memory for storing objects of the same type.",null,null],[3,"Entry","","A handle to an occupied slot in the `Slab`",null,null],[3,"VacantEntry","","A handle to a vacant slot in the `Slab`",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[11,"with_capacity","","Returns an empty `Slab` with the requested capacity",0,{"i":[{"n":"usize"}],"o":{"n":"slab"}}],[11,"len","","Returns the number of values stored by the `Slab`",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"capacity","","Returns the total capacity of the `Slab`",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the `Slab` is storing no values",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"available","","Returns the number of available slots remaining in the `Slab`",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"has_available","","Returns true if the `Slab` has available slots",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"contains","","Returns true if the `Slab` contains a value for the given token",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"bool"}}],[11,"get","","Get a reference to the value associated with the given token",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"option"}}],[11,"get_mut","","Get a mutable reference to the value associated with the given token",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"option"}}],[11,"insert","","Insert a value into the slab, returning the associated token",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"result"}}],[11,"entry","","Returns a handle to an entry.",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"g":["entry"],"n":"option"}}],[11,"vacant_entry","","Returns a handle to a vacant entry.",0,{"i":[{"n":"self"}],"o":{"g":["vacantentry"],"n":"option"}}],[11,"remove","","Releases the given slot",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"option"}}],[11,"retain","","Retain only the elements specified by the predicate.",0,{"i":[{"n":"self"},{"n":"f"}]}],[11,"iter","","An iterator for visiting all elements stored in the `Slab`",0,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"iter_mut","","A mutable iterator for visiting all elements stored in the `Slab`",0,{"i":[{"n":"self"}],"o":{"n":"itermut"}}],[11,"clear","","Empty the slab, by freeing all entries",0,{"i":[{"n":"self"}]}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the given `Slab`. Does nothing if the capacity is already sufficient.",0,{"i":[{"n":"self"},{"n":"usize"}]}],[11,"index","","",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"t"}}],[11,"index_mut","","",0,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"t"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"replace","","Replace the value stored in the entry",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"t"}}],[11,"replace_with","","Apply the function to the current value, replacing it with the result of the function.",1,{"i":[{"n":"self"},{"n":"f"}]}],[11,"remove","","Remove and return the value stored in the entry",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get","","Get a reference to the value stored in the entry",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_mut","","Get a mutable reference to the value stored in the entry",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"into_mut","","Convert the entry handle to a mutable reference",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"index","","Return the entry index",1,{"i":[{"n":"self"}],"o":{"n":"i"}}],[11,"insert","","Insert a value into the entry",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"entry"}}],[11,"index","","Returns the entry index",2,{"i":[{"n":"self"}],"o":{"n":"i"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",4,{"i":[{"n":"self"}],"o":{"n":"option"}}]],"paths":[[3,"Slab"],[3,"Entry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed right-to-left and left-to-right text.  It is written in safe Rust, compatible with the current stable release.","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text. If a character is multiple bytes, its class will appear multiple times in the vector.",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",2,null],[4,"BidiClass","","Represents values of the Unicode character property `Bidi_Class`, also known as the bidirectional character type.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,{"i":[{"n":"char"}],"o":{"n":"bidiclass"}}],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in visual order.",null,null],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,null],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go as high as `max_depth`.",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go as high as `max_depth + 1`.",null,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"level"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"ordering"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"le","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"gt","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"ge","","",5,{"i":[{"n":"self"},{"n":"level"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"ltr","","New LTR level with smallest number value (0).",5,{"o":{"n":"level"}}],[11,"rtl","","New RTL level with smallest number value (1).",5,{"o":{"n":"level"}}],[11,"max_implicit_depth","","Maximum depth of the directional status stack during implicit resolutions.",5,{"o":{"n":"u8"}}],[11,"max_explicit_depth","","Maximum depth of the directional status stack during explicit resolutions.",5,{"o":{"n":"u8"}}],[11,"new","","Create new level, fail if number is larger than `max_depth + 1`.",5,{"i":[{"n":"u8"}],"o":{"g":["level","error"],"n":"result"}}],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,{"i":[{"n":"u8"}],"o":{"g":["level","error"],"n":"result"}}],[11,"number","","The level number.",5,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"is_ltr","","If this level is left-to-right.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_rtl","","If this level is right-to-left.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"raise","","Raise level by `amount`, fail if number is larger than `max_depth + 1`.",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"g":["error"],"n":"result"}}],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than `max_depth`.",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"g":["error"],"n":"result"}}],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,{"i":[{"n":"self"},{"n":"u8"}],"o":{"g":["error"],"n":"result"}}],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if number is larger than `max_depth`.",5,{"i":[{"n":"self"}],"o":{"g":["level","error"],"n":"result"}}],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if number is larger than `max_depth`.",5,{"i":[{"n":"self"}],"o":{"g":["level","error"],"n":"result"}}],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this, or fail if number is larger than `max_depth + 1`.",5,{"i":[{"n":"self"}],"o":{"g":["level","error"],"n":"result"}}],[11,"bidi_class","","Generate a character type based on a level (as specified in steps X10 and N2).",5,{"i":[{"n":"self"}],"o":{"n":"bidiclass"}}],[11,"vec","","",5,null],[11,"into","","Convert to the level number",5,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"from","","Create level by number",5,{"i":[{"n":"u8"}],"o":{"n":"level"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"bool"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"bool"}}],[11,"clone","unicode_bidi","",3,{"i":[{"n":"self"}],"o":{"n":"bidiclass"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bidiclass"}],"o":{"n":"bool"}}],[6,"LevelRun","","A maximal substring of characters with the same embedding level.",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"paragraphinfo"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"paragraphinfo"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"initialinfo"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"initialinfo"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,{"i":[{"n":"str"},{"g":["level"],"n":"option"}],"o":{"n":"initialinfo"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"bidiinfo"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"bidiinfo"}],"o":{"n":"bool"}}],[11,"new","","Split the text into paragraphs and determine the bidi embedding levels for each paragraph.",2,{"i":[{"n":"str"},{"g":["level"],"n":"option"}],"o":{"n":"bidiinfo"}}],[11,"reordered_levels","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per byte.",2,{"i":[{"n":"self"},{"n":"paragraphinfo"},{"g":["usize"],"n":"range"}],"o":{"g":["level"],"n":"vec"}}],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only the embedding levels, one `Level` per character.",2,{"i":[{"n":"self"},{"n":"paragraphinfo"},{"g":["usize"],"n":"range"}],"o":{"g":["level"],"n":"vec"}}],[11,"reorder_line","","Re-order a line based on resolved levels and return the line in display order.",2,{"i":[{"n":"self"},{"n":"paragraphinfo"},{"g":["usize"],"n":"range"}],"o":{"g":["str"],"n":"cow"}}],[11,"visual_runs","","Find the level runs within a line and return them in visual order.",2,null],[11,"has_rtl","","If processed text has any computed RTL levels",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities as described in Unicode Standard Annex #15.","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many non-starters there have been since the last starter in NFKD and will emit a Combining Grapheme Joiner (U+034F) if the count exceeds 30.",null,null],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text is or isn't normalized without any allocations in many cases, but it has to be able to return `Maybe` when a full decomposition and recomposition is necessary.",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning `IsNormalized::Maybe` if further checks are necessary.  In this case a check like `s.chars().nfc().eq(s.chars())` should suffice.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,{"i":[{"n":"str"}],"o":{"n":"bool"}}],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,{"i":[{"n":"i"}],"o":{"n":"isnormalized"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"decompositions"}}],[11,"next","","",1,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"size_hint","","",1,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"recompositions"}}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"isnormalized"}],"o":{"n":"bool"}}],[11,"next","","",3,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"i":[{"n":"char"},{"n":"f"}]}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character. See Unicode Standard Annex #15 for more information.",null,{"i":[{"n":"char"},{"n":"f"}]}],[5,"compose","","Compose two characters into a single character, if possible. See Unicode Standard Annex #15 for more information.",null,{"i":[{"n":"char"},{"n":"char"}],"o":{"g":["char"],"n":"option"}}],[5,"canonical_combining_class","","",null,{"i":[{"n":"char"}],"o":{"n":"u8"}}],[5,"is_combining_mark","","",null,{"i":[{"n":"char"}],"o":{"n":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations as described in Unicode Standard Annex #15.",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D (canonical decomposition).",4,{"i":[{"n":"self"}],"o":{"n":"decompositions"}}],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD (compatibility decomposition).",4,{"i":[{"n":"self"}],"o":{"n":"decompositions"}}],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C (canonical decomposition followed by canonical composition).",4,{"i":[{"n":"self"}],"o":{"n":"recompositions"}}],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC (compatibility decomposition followed by canonical composition).",4,{"i":[{"n":"self"}],"o":{"n":"recompositions"}}],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme Joiner characters inserted according to the Stream-Safe Text Process (UAX15-D4)",4,{"i":[{"n":"self"}],"o":{"n":"streamsafe"}}]],"paths":[[4,"IsNormalized"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"],[8,"UnicodeNormalization"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the Rust programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement `ToSocketAddrs for (Host<S>, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII labels are encoded in punycode per IDNA if this is the host of a special URL, or percent encoded for non-special URLs. Hosts for non-special URLs are also called opaque hosts.",2,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization of this address, as four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization of that address between `[` and `]` brackets, in the format per RFC 5952 A Recommendation for IPv6 Address Text Representation: lowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",4,null],[13,"C0SpaceIgnored","","",4,null],[13,"EmbeddedCredentials","","",4,null],[13,"ExpectedDoubleSlash","","",4,null],[13,"ExpectedFileDoubleSlash","","",4,null],[13,"FileWithHostAndWindowsDrive","","",4,null],[13,"NonUrlCodePoint","","",4,null],[13,"NullInFragment","","",4,null],[13,"PercentDecode","","",4,null],[13,"TabOrNewlineIgnored","","",4,null],[13,"UnencodedAtSign","","",4,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",5,null],[13,"AfterScheme","","",5,null],[13,"BeforeUsername","","",5,null],[13,"AfterUsername","","",5,null],[13,"BeforePassword","","",5,null],[13,"AfterPassword","","",5,null],[13,"BeforeHost","","",5,null],[13,"AfterHost","","",5,null],[13,"BeforePort","","",5,null],[13,"AfterPort","","",5,null],[13,"BeforePath","","",5,null],[13,"AfterPath","","",5,null],[13,"BeforeQuery","","",5,null],[13,"AfterQuery","","",5,null],[13,"BeforeFragment","","",5,null],[13,"AfterFragment","","",5,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"host"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"host"}],"o":{"n":"bool"}}],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",2,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"host"}}],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"i":[{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"parse_opaque","","",2,{"i":[{"n":"str"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"hostandport"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.",0,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"hostandport"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_socket_addrs","","",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"option"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"origin"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"o":{"n":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple (as opposed to an opaque origin).",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"opaqueorigin"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"opaqueorigin"}],"o":{"n":"bool"}}],[11,"hash","","",7,null],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"opaqueorigin"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",8,{"i":[{"n":"self"}]}],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty, except if these was only one segment to begin with.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"pop","","Remove the last segment of this URL’s path.",8,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"push","","Append the given segment at the end of this URL’s path.",8,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",8,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"self"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"parseerror"}],"o":{"n":"bool"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"parseerror"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",3,{"i":[{"n":"errors"}],"o":{"n":"parseerror"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"syntaxviolation"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"syntaxviolation"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",4,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"index","","",9,{"i":[{"n":"self"},{"n":"rangefull"}],"o":{"n":"str"}}],[11,"index","","",9,{"i":[{"n":"self"},{"g":["position"],"n":"rangefrom"}],"o":{"n":"str"}}],[11,"index","","",9,{"i":[{"n":"self"},{"g":["position"],"n":"rangeto"}],"o":{"n":"str"}}],[11,"index","","",9,{"i":[{"n":"self"},{"g":["position"],"n":"range"}],"o":{"n":"str"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"form_urlencoded","","Parser and serializer for the `application/x-www-form-urlencoded` syntax, as used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax into a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",10,{"i":[{"n":"self"}],"o":{"n":"string"}}],[10,"finish","","",10,null],[16,"Finished","","",10,null],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.",11,{"i":[{"n":"self"}],"o":{"n":"parseintoowned"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"size_hint","","",13,null],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_mut_string","url","",15,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"finish","","",15,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",14,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer for a suffix of the given target.",14,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"self"}}],[11,"clear","","Remove any existing name/value pair.",14,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"custom_encoding_override","","Set the character encoding to be used for names and values before percent-encoding.",14,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"self"}}],[11,"append_pair","","Serialize and append a name/value pair.",14,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"n":"self"}}],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",14,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"self"}}],[11,"finish","","If this serializer was constructed with a string, take and return that string.",14,null],[11,"clone","url","",9,{"i":[{"n":"self"}],"o":{"n":"url"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"parseoptions"}}],[11,"base_url","","Change the base URL",16,{"i":[{"n":"self"},{"g":["url"],"n":"option"}],"o":{"n":"self"}}],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors, passing a static string description.  This method is deprecated in favor of `syntax_violation_callback` and is implemented as an adaptor for the latter, passing the `SyntaxViolation` description. Only the last value passed to either method will be used by a parser.",16,{"i":[{"n":"self"},{"g":["fn"],"n":"option"}],"o":{"n":"self"}}],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal `SyntaxViolation` when it occurs during parsing. Note that since the provided function is `Fn`, the caller might need to utilize interior mutability, such as with a `RefCell`, to collect the violations.",16,{"i":[{"n":"self"},{"g":["fn"],"n":"option"}],"o":{"n":"self"}}],[11,"parse","","Parse an URL string with the configuration so far.",16,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"parse","","Parse an absolute URL from a string.",9,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its query string.",9,{"i":[{"n":"str"},{"n":"i"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",9,{"o":{"n":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_string","","Return the serialization of this URL.",9,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",9,{"i":[{"n":"self"}],"o":{"n":"origin"}}],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"has_authority","","Return whether the URL has an 'authority', which can contain a username, password, host, and port number.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning that parsing a relative URL string with this URL as the base will return an error.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"username","","Return the username for this URL (typically the empty string) as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"has_host","","Equivalent to `url.host().is_some()`.",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"host","","Return the parsed representation of the host for this URL. Non-ASCII domain labels are punycode-encoded per IDNA.",9,{"i":[{"n":"self"}],"o":{"g":["host"],"n":"option"}}],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"port","","Return the port number for this URL, if any.",9,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",9,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["hostandport"],"n":"result"}}],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string. For cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'. For other URLs, this starts with a '/' slash and continues with slash-separated path segments.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of '/' slash-separated path segments, each as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"g":["split"],"n":"option"}}],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded` and return an iterator of (key, value) pairs.",9,{"i":[{"n":"self"}],"o":{"n":"parse"}}],[11,"fragment","","Return this URL’s fragment identifier, if any.",9,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"set_fragment","","Change this URL’s fragment identifier.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}]}],[11,"set_query","","Change this URL’s query string.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}]}],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs in `application/x-www-form-urlencoded` syntax.",9,{"i":[{"n":"self"}],"o":{"g":["urlquery"],"n":"serializer"}}],[11,"set_path","","Change this URL’s path.",9,{"i":[{"n":"self"},{"n":"str"}]}],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",9,{"i":[{"n":"self"}],"o":{"g":["pathsegmentsmut"],"n":"result"}}],[11,"set_port","","Change this URL’s port number.",9,{"i":[{"n":"self"},{"g":["u16"],"n":"option"}],"o":{"n":"result"}}],[11,"set_host","","Change this URL’s host.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"g":["parseerror"],"n":"result"}}],[11,"set_ip_host","","Change this URL’s host to the given IP address.",9,{"i":[{"n":"self"},{"n":"ipaddr"}],"o":{"n":"result"}}],[11,"set_password","","Change this URL’s password.",9,{"i":[{"n":"self"},{"g":["str"],"n":"option"}],"o":{"n":"result"}}],[11,"set_username","","Change this URL’s username.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"set_scheme","","Change this URL’s scheme.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",9,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",9,{"i":[{"n":"p"}],"o":{"g":["url"],"n":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar, convert its path to an absolute `std::path::Path`.",9,{"i":[{"n":"self"}],"o":{"g":["pathbuf"],"n":"result"}}],[11,"to_socket_addrs","","",9,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"from_str","","",9,{"i":[{"n":"str"}],"o":{"g":["url","parseerror"],"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"cmp","","",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"hash","","",9,{"i":[{"n":"self"},{"n":"h"}]}],[11,"as_ref","","",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"drop","","",15,{"i":[{"n":"self"}]}],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"UrlQuery"],[3,"ParseOptions"]]};
searchIndex["ws"] = {"doc":"Lightweight, event-driven WebSockets for Rust.","items":[[3,"Error","ws","A struct indicating the kind of error that has occurred and any precise details of that error.",null,null],[12,"kind","","",0,null],[12,"details","","",0,null],[3,"Sender","","A representation of the output of the WebSocket connection. Use this to send messages to the other endpoint.",null,null],[3,"Frame","","A struct representing a WebSocket frame.",null,null],[3,"Handshake","","A struct representing the two halves of the WebSocket handshake.",null,null],[12,"request","","The HTTP request sent to begin the handshake.",1,null],[12,"response","","The HTTP response from the server confirming the handshake.",1,null],[12,"peer_addr","","The socket address of the other endpoint. This address may be an intermediary such as a proxy server.",1,null],[12,"local_addr","","The socket address of this endpoint.",1,null],[3,"Request","","The handshake request.",null,null],[3,"Response","","The handshake response.",null,null],[3,"Settings","","WebSocket settings",null,null],[12,"max_connections","","The maximum number of connections that this WebSocket will support. The default setting is low and should be increased when expecting more connections because this is a hard limit and no new connections beyond this limit can be made until an old connection is dropped. Default: 100",2,null],[12,"queue_size","","The number of events anticipated per connection. The event loop queue size will be `queue_size` * `max_connections`. In order to avoid an overflow error, `queue_size` * `max_connections` must be less than or equal to `usize::max_value()`. The queue is shared between connections, which means that a connection may schedule more events than `queue_size` provided that another connection is using less than `queue_size`. However, if the queue is maxed out a Queue error will occur. Default: 5",2,null],[12,"panic_on_new_connection","","Whether to panic when unable to establish a new TCP connection. Default: false",2,null],[12,"panic_on_shutdown","","Whether to panic when a shutdown of the WebSocket is requested. Default: false",2,null],[12,"fragments_capacity","","The maximum number of fragments the connection can handle without reallocating. Default: 10",2,null],[12,"fragments_grow","","Whether to reallocate when `fragments_capacity` is reached. If this is false, a Capacity error will be triggered instead. Default: true",2,null],[12,"fragment_size","","The maximum length of outgoing frames. Messages longer than this will be fragmented. Default: 65,535",2,null],[12,"in_buffer_capacity","","The size of the incoming buffer. A larger buffer uses more memory but will allow for fewer reallocations. Default: 2048",2,null],[12,"in_buffer_grow","","Whether to reallocate the incoming buffer when `in_buffer_capacity` is reached. If this is false, a Capacity error will be triggered instead. Default: true",2,null],[12,"out_buffer_capacity","","The size of the outgoing buffer. A larger buffer uses more memory but will allow for fewer reallocations. Default: 2048",2,null],[12,"out_buffer_grow","","Whether to reallocate the incoming buffer when `out_buffer_capacity` is reached. If this is false, a Capacity error will be triggered instead. Default: true",2,null],[12,"panic_on_internal","","Whether to panic when an Internal error is encountered. Internal errors should generally not occur, so this setting defaults to true as a debug measure, whereas production applications should consider setting it to false. Default: true",2,null],[12,"panic_on_capacity","","Whether to panic when a Capacity error is encountered. Default: false",2,null],[12,"panic_on_protocol","","Whether to panic when a Protocol error is encountered. Default: false",2,null],[12,"panic_on_encoding","","Whether to panic when an Encoding error is encountered. Default: false",2,null],[12,"panic_on_queue","","Whether to panic when a Queue error is encountered. Default: false",2,null],[12,"panic_on_io","","Whether to panic when an Io error is encountered. Default: false",2,null],[12,"panic_on_timeout","","Whether to panic when a Timer error is encountered. Default: false",2,null],[12,"shutdown_on_interrupt","","Whether to shutdown the eventloop when an interrupt is received. Default: true",2,null],[12,"masking_strict","","The WebSocket protocol requires frames sent from client endpoints to be masked as a security and sanity precaution. Enforcing this requirement, which may be removed at some point may cause incompatibilities. If you need the extra security, set this to true. Default: false",2,null],[12,"key_strict","","The WebSocket protocol requires clients to verify the key returned by a server to ensure that the server and all intermediaries can perform the protocol. Verifying the key will consume processing time and other resources with the benefit that we can fail the connection early. The default in WS-RS is to accept any key from the server and instead fail late if a protocol error occurs. Change this setting to enable key verification. Default: false",2,null],[12,"method_strict","","The WebSocket protocol requires clients to perform an opening handshake using the HTTP GET method for the request. However, since only WebSockets are supported on the connection, verifying the method of handshake requests is not always necessary. To enforce the requirement that handshakes begin with a GET method, set this to true. Default: false",2,null],[12,"encrypt_server","","Indicate whether server connections should use ssl encryption when accepting connections. Setting this to true means that clients should use the `wss` scheme to connect to this server. Note that using this flag will in general necessitate overriding the `Handler::upgrade_ssl_server` method in order to provide the details of the ssl context. It may be simpler for most users to use a reverse proxy such as nginx to provide server side encryption.",2,null],[12,"tcp_nodelay","","Disables Nagle's algorithm. Usually tcp socket tries to accumulate packets to send them all together (every 200ms). When enabled socket will try to send packet as fast as possible.",2,null],[3,"WebSocket","","The WebSocket struct. A WebSocket can support multiple incoming and outgoing connections.",null,null],[3,"Builder","","Utility for constructing a WebSocket from various settings.",null,null],[4,"ErrorKind","","The type of an error, which may indicate other kinds of errors as the underlying cause.",null,null],[13,"Internal","","Indicates an internal application error. If panic_on_internal is true, which is the default, then the application will panic.  Otherwise the WebSocket will automatically attempt to send an Error (1011) close code.",3,null],[13,"Capacity","","Indicates a state where some size limit has been exceeded, such as an inability to accept any more new connections. If a Connection is active, the WebSocket will automatically attempt to send a Size (1009) close code.",3,null],[13,"Protocol","","Indicates a violation of the WebSocket protocol. The WebSocket will automatically attempt to send a Protocol (1002) close code, or if this error occurs during a handshake, an HTTP 400 response will be generated.",3,null],[13,"Encoding","","Indicates that the WebSocket received data that should be utf8 encoded but was not. The WebSocket will automatically attempt to send a Invalid Frame Payload Data (1007) close code.",3,null],[13,"Io","","Indicates an underlying IO Error. This kind of error will result in a WebSocket Connection disconnecting.",3,null],[13,"Http","","Indicates a failure to parse an HTTP message. This kind of error should only occur during a WebSocket Handshake, and a HTTP 500 response will be generated.",3,null],[13,"Queue","","Indicates a failure to send a signal on the internal EventLoop channel. This means that the WebSocket is overloaded. In order to avoid this error, it is important to set `Settings::max_connections` and `Settings:queue_size` high enough to handle the load. If encountered, retuning from a handler method and waiting for the EventLoop to consume the queue may relieve the situation.",3,null],[13,"Timer","","Indicates a failure to schedule a timeout on the EventLoop.",3,null],[13,"Custom","","A custom error kind for use by applications. This error kind involves extra overhead because it will allocate the memory on the heap. The WebSocket ignores such errors by default, simply passing them to the Connection Handler.",3,null],[4,"Message","","An enum representing the various forms of a WebSocket message.",null,null],[13,"Text","","A text WebSocket message",4,null],[13,"Binary","","A binary WebSocket message",4,null],[4,"CloseCode","","Status code used to indicate why an endpoint is closing the WebSocket connection.",null,null],[13,"Normal","","Indicates a normal closure, meaning that the purpose for which the connection was established has been fulfilled.",5,null],[13,"Away","","Indicates that an endpoint is \"going away\", such as a server going down or a browser having navigated away from a page.",5,null],[13,"Protocol","","Indicates that an endpoint is terminating the connection due to a protocol error.",5,null],[13,"Unsupported","","Indicates that an endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).",5,null],[13,"Status","","Indicates that no status code was included in a closing frame. This close code makes it possible to use a single method, `on_close` to handle even cases where no close code was provided.",5,null],[13,"Abnormal","","Indicates an abnormal closure. If the abnormal closure was due to an error, this close code will not be used. Instead, the `on_error` method of the handler will be called with the error. However, if the connection is simply dropped, without an error, this close code will be sent to the handler.",5,null],[13,"Invalid","","Indicates that an endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [RFC3629] data within a text message).",5,null],[13,"Policy","","Indicates that an endpoint is terminating the connection because it has received a message that violates its policy.  This is a generic status code that can be returned when there is no other more suitable status code (e.g., Unsupported or Size) or if there is a need to hide specific details about the policy.",5,null],[13,"Size","","Indicates that an endpoint is terminating the connection because it has received a message that is too big for it to process.",5,null],[13,"Extension","","Indicates that an endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the response message of the WebSocket handshake.  The list of extensions that are needed should be given as the reason for closing. Note that this status code is not used by the server, because it can fail the WebSocket handshake instead.",5,null],[13,"Error","","Indicates that a server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",5,null],[13,"Restart","","Indicates that the server is restarting. A client may choose to reconnect, and if it does, it should use a randomized delay of 5-30 seconds between attempts.",5,null],[13,"Again","","Indicates that the server is overloaded and the client should either connect to a different IP (when multiple targets exist), or reconnect to the same IP when a user has performed an action.",5,null],[4,"OpCode","","Operation codes as part of rfc6455.",null,null],[13,"Continue","","Indicates a continuation frame of a fragmented message.",6,null],[13,"Text","","Indicates a text data frame.",6,null],[13,"Binary","","Indicates a binary data frame.",6,null],[13,"Close","","Indicates a close control frame.",6,null],[13,"Ping","","Indicates a ping control frame.",6,null],[13,"Pong","","Indicates a pong control frame.",6,null],[13,"Bad","","Indicates an invalid opcode was received.",6,null],[5,"listen","","A utility function for setting up a WebSocket server.",null,{"i":[{"n":"a"},{"n":"f"}],"o":{"n":"result"}}],[5,"connect","","A utility function for setting up a WebSocket client.",null,{"i":[{"n":"u"},{"n":"f"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","",0,{"i":[{"n":"kind"},{"n":"i"}],"o":{"n":"error"}}],[11,"into_box","","",0,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"box"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",0,{"i":[{"n":"self"}],"o":{"g":["stderror"],"n":"option"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"from","","",0,{"i":[{"n":"error"}],"o":{"n":"error"}}],[11,"from","","",0,{"i":[{"g":["command"],"n":"senderror"}],"o":{"n":"error"}}],[11,"from","","",0,{"i":[{"n":"timererror"}],"o":{"n":"error"}}],[11,"from","","",0,{"i":[{"n":"utf8error"}],"o":{"n":"error"}}],[11,"from","","",0,{"i":[{"n":"box"}],"o":{"n":"error"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"frame"}}],[11,"len","","Get the length of the frame. This is the length of the header + the length of the payload.",7,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_final","","Test whether the frame is a final frame.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"has_rsv1","","Test whether the first reserved bit is set.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"has_rsv2","","Test whether the second reserved bit is set.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"has_rsv3","","Test whether the third reserved bit is set.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"opcode","","Get the OpCode of the frame.",7,{"i":[{"n":"self"}],"o":{"n":"opcode"}}],[11,"is_control","","Test whether this is a control frame.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"payload","","Get a reference to the frame's payload.",7,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"set_final","","Make this frame a final frame.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"frame"}}],[11,"set_rsv1","","Set the first reserved bit.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"frame"}}],[11,"set_rsv2","","Set the second reserved bit.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"frame"}}],[11,"set_rsv3","","Set the third reserved bit.",7,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"frame"}}],[11,"set_opcode","","Set the OpCode.",7,{"i":[{"n":"self"},{"n":"opcode"}],"o":{"n":"frame"}}],[11,"payload_mut","","Edit the frame's payload.",7,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"into_data","","Consume the frame into its payload.",7,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"vec"}}],[11,"message","","Create a new data frame.",7,{"i":[{"g":["u8"],"n":"vec"},{"n":"opcode"},{"n":"bool"}],"o":{"n":"frame"}}],[11,"pong","","Create a new Pong control frame.",7,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"frame"}}],[11,"ping","","Create a new Ping control frame.",7,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"frame"}}],[11,"close","","Create a new Close control frame.",7,{"i":[{"n":"closecode"},{"n":"str"}],"o":{"n":"frame"}}],[11,"parse","","Parse the input stream into a frame.",7,{"i":[{"n":"cursor"}],"o":{"g":["option"],"n":"result"}}],[11,"format","","Write a frame out to a buffer",7,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",7,{"o":{"n":"frame"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"bool"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"message"}}],[11,"text","","Create a new text WebSocket message from a stringable.",4,{"i":[{"n":"s"}],"o":{"n":"message"}}],[11,"binary","","Create a new binary WebSocket message by converting to Vec.",4,{"i":[{"n":"b"}],"o":{"n":"message"}}],[11,"is_text","","Indicates whether a message is a text message.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_binary","","Indicates whether a message is a binary message.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"len","","Get the length of the WebSocket message.",4,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Returns true if the WebSocket message has no content. For example, if the other side of the connection sent an empty string.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_data","","Consume the WebSocket and return it as binary data.",4,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"vec"}}],[11,"into_text","","Attempt to consume the WebSocket message and convert it to a String.",4,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"result"}}],[11,"as_text","","Attempt to get a &str from the WebSocket message, this will try to convert binary data to utf8.",4,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"result"}}],[11,"from","","",4,{"i":[{"n":"string"}],"o":{"n":"message"}}],[11,"from","","",4,{"i":[{"n":"str"}],"o":{"n":"message"}}],[11,"from","","",4,null],[11,"from","","",4,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"message"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"stdresult"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"remote_addr","","Get the IP address of the remote connection.",1,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"header","","Get the value of the first instance of an HTTP header.",8,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec"],"n":"option"}}],[11,"header_mut","","Edit the value of the first instance of an HTTP header.",8,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec"],"n":"option"}}],[11,"headers","","Access the request headers.",8,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"headers_mut","","Edit the request headers.",8,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"origin","","Get the origin of the request if it comes from a browser.",8,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"key","","Get the unhashed WebSocket key sent in the request.",8,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"result"}}],[11,"hashed_key","","Get the hashed WebSocket key from this request.",8,{"i":[{"n":"self"}],"o":{"g":["string"],"n":"result"}}],[11,"version","","Get the WebSocket protocol version from the request (should be 13).",8,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"result"}}],[11,"method","","Get the request method.",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"resource","","Get the path of the request.",8,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"protocols","","Get the possible protocols for the WebSocket connection.",8,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"result"}}],[11,"add_protocol","","Add a possible protocol to this request. This may result in duplicate protocols listed.",8,{"i":[{"n":"self"},{"n":"str"}]}],[11,"remove_protocol","","Remove a possible protocol from this request.",8,{"i":[{"n":"self"},{"n":"str"}]}],[11,"extensions","","Get the possible extensions for the WebSocket connection.",8,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"result"}}],[11,"add_extension","","Add a possible extension to this request. This may result in duplicate extensions listed. Also, the order of extensions indicates preference, so if the preference matters, consider using the `Sec-WebSocket-Protocol` header directly.",8,{"i":[{"n":"self"},{"n":"str"}]}],[11,"remove_extension","","Remove a possible extension from this request. This will remove all configurations of the extension.",8,{"i":[{"n":"self"},{"n":"str"}]}],[11,"client_addr","","Get the IP address of the client.",8,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"parse","","Attempt to parse an HTTP request from a buffer. If the buffer does not contain a complete request, this will return `Ok(None)`.",8,null],[11,"from_url","","Construct a new WebSocket handshake HTTP request from a url.",8,{"i":[{"n":"url"}],"o":{"g":["request"],"n":"result"}}],[11,"format","","Write a request out to a buffer",8,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a generic HTTP response with a body.",9,{"i":[{"n":"u16"},{"n":"r"},{"g":["u8"],"n":"vec"}],"o":{"n":"response"}}],[11,"body","","Get the response body.",9,null],[11,"header_mut","","Edit the value of the first instance of an HTTP header.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec"],"n":"option"}}],[11,"headers","","Access the request headers.",9,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"headers_mut","","Edit the request headers.",9,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"status","","Get the HTTP status code.",9,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"set_status","","Set the HTTP status code.",9,{"i":[{"n":"self"},{"n":"u16"}]}],[11,"reason","","Get the HTTP status reason.",9,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"set_reason","","Set the HTTP status reason.",9,{"i":[{"n":"self"},{"n":"r"}]}],[11,"key","","Get the hashed WebSocket key.",9,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"result"}}],[11,"protocol","","Get the protocol that the server has decided to use.",9,{"i":[{"n":"self"}],"o":{"g":["option"],"n":"result"}}],[11,"set_protocol","","Set the protocol that the server has decided to use.",9,{"i":[{"n":"self"},{"n":"str"}]}],[11,"extensions","","Get the extensions that the server has decided to use. If these are unacceptable, it is appropriate to send an Extension close code.",9,{"i":[{"n":"self"}],"o":{"g":["vec"],"n":"result"}}],[11,"add_extension","","Add an accepted extension to this response. This may result in duplicate extensions listed.",9,{"i":[{"n":"self"},{"n":"str"}]}],[11,"remove_extension","","Remove an accepted extension from this response. This will remove all configurations of the extension.",9,{"i":[{"n":"self"},{"n":"str"}]}],[11,"parse","","Attempt to parse an HTTP response from a buffer. If the buffer does not contain a complete response, thiw will return `Ok(None)`.",9,null],[11,"from_request","","Construct a new WebSocket handshake HTTP response from a request. This will create a response that ignores protocols and extensions. Edit this response to accept a protocol and extensions as necessary.",9,{"i":[{"n":"request"}],"o":{"g":["response"],"n":"result"}}],[11,"format","","Write a response out to a buffer",9,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"opcode"}],"o":{"n":"bool"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"opcode"}}],[11,"is_control","","Test whether the opcode indicates a control frame.",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into","","",6,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"from","","",6,{"i":[{"n":"u8"}],"o":{"n":"opcode"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"closecode"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"closecode"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"closecode"}}],[11,"into","","",5,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"from","","",5,{"i":[{"n":"u16"}],"o":{"n":"closecode"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"sender"}],"o":{"n":"bool"}}],[11,"token","","A Token identifying this sender within the WebSocket.",10,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"connection_id","","A connection_id identifying this sender within the WebSocket.",10,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"send","","Send a message over the connection.",10,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"result"}}],[11,"broadcast","","Send a message to the endpoints of all connections.",10,{"i":[{"n":"self"},{"n":"m"}],"o":{"n":"result"}}],[11,"close","","Send a close code to the other endpoint.",10,{"i":[{"n":"self"},{"n":"closecode"}],"o":{"n":"result"}}],[11,"close_with_reason","","Send a close code and provide a descriptive reason for closing.",10,{"i":[{"n":"self"},{"n":"closecode"},{"n":"s"}],"o":{"n":"result"}}],[11,"ping","","Send a ping to the other endpoint with the given test data.",10,{"i":[{"n":"self"},{"g":["u8"],"n":"vec"}],"o":{"n":"result"}}],[11,"pong","","Send a pong to the other endpoint responding with the given test data.",10,{"i":[{"n":"self"},{"g":["u8"],"n":"vec"}],"o":{"n":"result"}}],[11,"connect","","Queue a new connection on this WebSocket to the specified URL.",10,{"i":[{"n":"self"},{"n":"url"}],"o":{"n":"result"}}],[11,"shutdown","","Request that all connections terminate and that the WebSocket stop running.",10,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"timeout","","Schedule a `token` to be sent to the WebSocket Handler's `on_timeout` method after `ms` milliseconds",10,{"i":[{"n":"self"},{"n":"u64"},{"n":"token"}],"o":{"n":"result"}}],[11,"cancel","","Queue the cancellation of a previously scheduled timeout.",10,{"i":[{"n":"self"},{"n":"timeout"}],"o":{"n":"result"}}],[0,"util","","The util module rexports some tools from mio in order to facilitate handling timeouts.",null,null],[3,"Token","ws::util","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",11,null],[3,"Timeout","","",null,null],[6,"Slab","","A Slab allocator for associating tokens to data.",null,null],[6,"Result","ws","",null,null],[8,"Factory","","A trait for creating new WebSocket handlers.",null,null],[16,"Handler","","",12,null],[10,"connection_made","","Called when a TCP connection is made.",12,null],[11,"on_shutdown","","Called when the WebSocket is shutting down.",12,{"i":[{"n":"self"}]}],[11,"client_connected","","Called when a new connection is established for a client endpoint. This method can be used to differentiate a client aspect for a handler.",12,null],[11,"server_connected","","Called when a new connection is established for a server endpoint. This method can be used to differentiate a server aspect for a handler.",12,null],[11,"connection_lost","","Called when a TCP connection is lost with the handler that was setup for that connection.",12,null],[8,"Handler","","The core trait of this library. Implementing this trait provides the business logic of the WebSocket application.",null,null],[11,"on_shutdown","","Called when a request to shutdown all connections has been received.",13,{"i":[{"n":"self"}]}],[11,"on_open","","Called when the WebSocket handshake is successful and the connection is open for sending and receiving messages.",13,{"i":[{"n":"self"},{"n":"handshake"}],"o":{"n":"result"}}],[11,"on_message","","Called on incoming messages.",13,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"result"}}],[11,"on_close","","Called any time this endpoint receives a close control frame. This may be because the other endpoint is initiating a closing handshake, or it may be the other endpoint confirming the handshake initiated by this endpoint.",13,{"i":[{"n":"self"},{"n":"closecode"},{"n":"str"}]}],[11,"on_error","","Called when an error occurs on the WebSocket.",13,{"i":[{"n":"self"},{"n":"error"}]}],[11,"on_request","","A method for handling the low-level workings of the request portion of the WebSocket handshake.",13,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response"],"n":"result"}}],[11,"on_response","","A method for handling the low-level workings of the response portion of the WebSocket handshake.",13,{"i":[{"n":"self"},{"n":"response"}],"o":{"n":"result"}}],[11,"on_timeout","","Called when a timeout is triggered.",13,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"result"}}],[11,"on_new_timeout","","Called when a timeout has been scheduled on the eventloop.",13,{"i":[{"n":"self"},{"n":"token"},{"n":"timeout"}],"o":{"n":"result"}}],[11,"on_frame","","A method for handling incoming frames.",13,{"i":[{"n":"self"},{"n":"frame"}],"o":{"g":["option"],"n":"result"}}],[11,"on_send_frame","","A method for handling outgoing frames.",13,{"i":[{"n":"self"},{"n":"frame"}],"o":{"g":["option"],"n":"result"}}],[11,"build_request","","A method for creating the initial handshake request for WebSocket clients.",13,{"i":[{"n":"self"},{"n":"url"}],"o":{"g":["request"],"n":"result"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"settings"}}],[11,"default","","",2,{"o":{"n":"settings"}}],[11,"new","","Create a new WebSocket using the given Factory to create handlers.",14,{"i":[{"n":"f"}],"o":{"g":["websocket"],"n":"result"}}],[11,"bind","","Consume the WebSocket and bind to the specified address. If the `addr_spec` yields multiple addresses this will return after the first successful bind. `local_addr` can be called to determine which address it ended up binding to. After the server is successfully bound you should start it using `run`.",14,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["websocket"],"n":"result"}}],[11,"listen","","Consume the WebSocket and listen for new connections on the specified address.",14,{"i":[{"n":"self"},{"n":"a"}],"o":{"g":["websocket"],"n":"result"}}],[11,"connect","","Queue an outgoing connection on this WebSocket. This method may be called multiple times, but the actual connections will not be established until `run` is called.",14,{"i":[{"n":"self"},{"n":"url"}],"o":{"g":["websocket"],"n":"result"}}],[11,"run","","Run the WebSocket. This will run the encapsulated event loop blocking the calling thread until the WebSocket is shutdown.",14,{"i":[{"n":"self"}],"o":{"g":["websocket"],"n":"result"}}],[11,"broadcaster","","Get a Sender that can be used to send messages on all connections. Calling `send` on this Sender is equivalent to calling `broadcast`. Calling `shutdown` on this Sender will shutdown the WebSocket even if no connections have been established.",14,{"i":[{"n":"self"}],"o":{"n":"sender"}}],[11,"local_addr","","Get the local socket address this socket is bound to. Will return an error if the backend returns an error. Will return a `NotFound` error if this WebSocket is not a listening socket.",14,{"i":[{"n":"self"}],"o":{"g":["socketaddr"],"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"builder"}}],[11,"new","","Create a new Builder with default settings.",15,{"o":{"n":"builder"}}],[11,"build","","Build a WebSocket using this builder and a factory. It is possible to use the same builder to create multiple WebSockets.",15,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["websocket"],"n":"result"}}],[11,"with_settings","","Set the WebSocket settings to use.",15,{"i":[{"n":"self"},{"n":"settings"}],"o":{"n":"builder"}}],[11,"on_shutdown","","Called when a request to shutdown all connections has been received.",13,{"i":[{"n":"self"}]}],[11,"on_open","","Called when the WebSocket handshake is successful and the connection is open for sending and receiving messages.",13,{"i":[{"n":"self"},{"n":"handshake"}],"o":{"n":"result"}}],[11,"on_message","","Called on incoming messages.",13,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"result"}}],[11,"on_close","","Called any time this endpoint receives a close control frame. This may be because the other endpoint is initiating a closing handshake, or it may be the other endpoint confirming the handshake initiated by this endpoint.",13,{"i":[{"n":"self"},{"n":"closecode"},{"n":"str"}]}],[11,"on_error","","Called when an error occurs on the WebSocket.",13,{"i":[{"n":"self"},{"n":"error"}]}],[11,"on_request","","A method for handling the low-level workings of the request portion of the WebSocket handshake.",13,{"i":[{"n":"self"},{"n":"request"}],"o":{"g":["response"],"n":"result"}}],[11,"on_response","","A method for handling the low-level workings of the response portion of the WebSocket handshake.",13,{"i":[{"n":"self"},{"n":"response"}],"o":{"n":"result"}}],[11,"on_timeout","","Called when a timeout is triggered.",13,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"result"}}],[11,"on_new_timeout","","Called when a timeout has been scheduled on the eventloop.",13,{"i":[{"n":"self"},{"n":"token"},{"n":"timeout"}],"o":{"n":"result"}}],[11,"on_frame","","A method for handling incoming frames.",13,{"i":[{"n":"self"},{"n":"frame"}],"o":{"g":["option"],"n":"result"}}],[11,"on_send_frame","","A method for handling outgoing frames.",13,{"i":[{"n":"self"},{"n":"frame"}],"o":{"g":["option"],"n":"result"}}],[11,"build_request","","A method for creating the initial handshake request for WebSocket clients.",13,{"i":[{"n":"self"},{"n":"url"}],"o":{"g":["request"],"n":"result"}}],[11,"on_shutdown","","Called when the WebSocket is shutting down.",12,{"i":[{"n":"self"}]}],[11,"client_connected","","Called when a new connection is established for a client endpoint. This method can be used to differentiate a client aspect for a handler.",12,null],[11,"server_connected","","Called when a new connection is established for a server endpoint. This method can be used to differentiate a server aspect for a handler.",12,null],[11,"connection_lost","","Called when a TCP connection is lost with the handler that was setup for that connection.",12,null],[11,"clone","ws::util","",16,{"i":[{"n":"self"}],"o":{"n":"timeout"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"hash","","",11,null],[11,"cmp","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"le","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"gt","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ge","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"from","","",11,{"i":[{"n":"usize"}],"o":{"n":"token"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}]],"paths":[[3,"Error"],[3,"Handshake"],[3,"Settings"],[4,"ErrorKind"],[4,"Message"],[4,"CloseCode"],[4,"OpCode"],[3,"Frame"],[3,"Request"],[3,"Response"],[3,"Sender"],[3,"Token"],[8,"Factory"],[8,"Handler"],[3,"WebSocket"],[3,"Builder"],[3,"Timeout"]]};
initSearch(searchIndex);
